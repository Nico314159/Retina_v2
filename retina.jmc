import "math";

// also includes blocks w/ randomized hitboxes
new tags.blocks(airs) {
    "values": [
        "minecraft:air",
        "minecraft:cave_air",
        "minecraft:void_air",
        "#minecraft:small_flowers",
        "minecraft:mangrove_propagule",
        "minecraft:bamboo_sapling",
        "minecraft:bamboo",
        "minecraft:pointed_dripstone"
	]
}

new tags.blocks(anvil) {
    "values": ["#minecraft:anvil"]
}
new tags.blocks(attached_stem) {
	"values": [
		"minecraft:attached_melon_stem",
		"minecraft:attached_pumpkin_stem"
	]
}
new tags.blocks(bed) {
	"values": ["#minecraft:beds"]
}
new tags.blocks(bell) {
    "values": ["minecraft:bell"]
}
new tags.blocks(berries) {
    "values": ["minecraft:sweet_berry_bush"]
}
new tags.blocks(brewing_stand) {
	"values": ["minecraft:brewing_stand"]
}
new tags.blocks(button) {
	"values": ["minecraft:buttons"]
}
new tags.blocks(cactus_shaped) {
    "values": [
		"minecraft:cactus",
        "minecraft:decorated_pot",
		"minecraft:dragon_egg",
        "minecraft:weeping_vines_plant",
        "minecraft:cave_vines_plant",
        "minecraft:cave_vines"
	]
}
new tags.blocks(cake) {
    "values": ["minecraft:cake"]
}
new tags.blocks(campfire) {
    "values": ["#minecraft:campfires"]
}
new tags.blocks(carpet) {
    "values": [
        "#minecraft:wool_carpets",
        "minecraft:moss_carpet"
    ]
}
new tags.blocks(cauldron) {
    "values": ["#minecraft:cauldrons"]
}
new tags.blocks(chain) {
    "values": ["minecraft:chain"]
}
new tags.blocks(chest) {
    "values": [
		"minecraft:chest",
		"minecraft:ender_chest",
		"minecraft:trapped_chest"
	]
}
new tags.blocks(composter) {
    "values": ["minecraft:composter"]
}
new tags.blocks(conduit) {
    "values": ["minecraft:conduit"]
}
new tags.blocks(coral_fan) {
    "values": [
        "minecraft:tube_coral_fan",
        "minecraft:brain_coral_fan",
        "minecraft:bubble_coral_fan",
        "minecraft:fire_coral_fan",
        "minecraft:horn_coral_fan",
        "minecraft:dead_tube_coral_fan",
        "minecraft:dead_brain_coral_fan",
        "minecraft:dead_bubble_coral_fan",
        "minecraft:dead_fire_coral_fan",
        "minecraft:dead_horn_coral_fan"
    ]
}
new tags.blocks(coral_plant) {
    "values": [
        "minecraft:tube_coral",
        "minecraft:brain_coral",
        "minecraft:bubble_coral",
        "minecraft:fire_coral",
        "minecraft:horn_coral",
        "minecraft:dead_tube_coral",
        "minecraft:dead_brain_coral",
        "minecraft:dead_bubble_coral",
        "minecraft:dead_fire_coral",
        "minecraft:dead_horn_coral"
    ]
}
new tags.blocks(daylight_detector) {
    "values": ["minecraft:daylight_detector"]
}
new tags.blocks(door) {
    "values": ["#minecraft:doors"]
}
new tags.blocks(end_portal_frame) {
    "values": ["minecraft:end_portal_frame"]
}
new tags.blocks(farmland_shaped) {
    "values": [
        "minecraft:farmland",
        "minecraft:dirt_path"
    ]
}
new tags.blocks(fence) {
    "values": ["#minecraft:fences"]
}
new tags.blocks(fence_gate) {
    "values": ["#minecraft:fence_gates"]
}
new tags.blocks(fire) {
    "values": ["#minecraft:fire"]
}
new tags.blocks(grass_shaped) {
    "values": [
		"minecraft:grass",
		"minecraft:fern",
		"minecraft:dead_bush",
		"minecraft:warped_roots",
		"minecraft:crimson_roots",
		"minecraft:small_dripleaf"
	]
}
new tags.blocks(hanging_roots) {
    "values": ["minecraft:hanging_roots"]
}
new tags.blocks(head) {
    "values": [
        "minecraft:player_head",
        "minecraft:zombie_head",
        "minecraft:creeper_head",
        "minecraft:skeleton_skull",
        "minecraft:wither_skeleton_skull",
        "minecraft:dragon_head"
    ]
}
new tags.blocks(hopper) {
    "values": ["minecraft:hopper"]
}
new tags.blocks(ladder) {
    "values": ["minecraft:ladder"]
}
new tags.blocks(lantern) {
    "values": [
        "minecraft:lantern",
        "minecraft:soul_lantern"
    ]
}
new tags.blocks(lever) {
    "values": ["minecraft:lever"]
}
new tags.blocks(mushroom_shaped) {
	"values": [
		"minecraft:brown_mushroom",
		"minecraft:red_mushroom",
		"minecraft:flower_pot",
		"minecraft:potted_oak_sapling",
		"minecraft:potted_spruce_sapling",
		"minecraft:potted_birch_sapling",
		"minecraft:potted_jungle_sapling",
		"minecraft:potted_acacia_sapling",
		"minecraft:potted_dark_oak_sapling",
		"minecraft:potted_fern",
		"minecraft:potted_dandelion",
		"minecraft:potted_poppy",
		"minecraft:potted_blue_orchid",
		"minecraft:potted_allium",
		"minecraft:potted_azure_bluet",
		"minecraft:potted_red_tulip",
		"minecraft:potted_orange_tulip",
		"minecraft:potted_white_tulip",
		"minecraft:potted_pink_tulip",
		"minecraft:potted_oxeye_daisy",
		"minecraft:potted_cornflower",
		"minecraft:potted_lily_of_the_valley",
		"minecraft:potted_wither_rose",
		"minecraft:potted_red_mushroom",
		"minecraft:potted_brown_mushroom",
		"minecraft:potted_dead_bush",
		"minecraft:potted_cactus",
		"minecraft:potted_bamboo",
		"minecraft:potted_crimson_fungus",
		"minecraft:potted_warped_fungus",
		"minecraft:potted_crimson_roots",
		"minecraft:potted_warped_roots",
		"minecraft:potted_azalea_bush",
		"minecraft:potted_flowering_azalea_bush",
        "minecraft:potted_mangrove_propagule",
        "minecraft:potted_cherry_sapling",
        "minecraft:potted_torchflower"
	]
}
new tags.blocks(nether_fungus) {
    "values": [
        "minecraft:crimson_fungus",
        "minecraft:warped_fungus"
    ]
}
new tags.blocks(nether_sprouts) {
    "values": ["minecraft:nether_sprouts"]
}
new tags.blocks(pane_shaped) {
	"values": [
		"minecraft:iron_bars",
		"minecraft:glass_pane",
		"minecraft:white_stained_glass_pane",
		"minecraft:orange_stained_glass_pane",
		"minecraft:magenta_stained_glass_pane",
		"minecraft:light_blue_stained_glass_pane",
		"minecraft:yellow_stained_glass_pane",
		"minecraft:lime_stained_glass_pane",
		"minecraft:pink_stained_glass_pane",
		"minecraft:gray_stained_glass_pane",
		"minecraft:light_gray_stained_glass_pane",
		"minecraft:cyan_stained_glass_pane",
		"minecraft:purple_stained_glass_pane",
		"minecraft:blue_stained_glass_pane",
		"minecraft:brown_stained_glass_pane",
		"minecraft:green_stained_glass_pane",
		"minecraft:red_stained_glass_pane",
		"minecraft:black_stained_glass_pane"
	]
}
new tags.blocks(pickle) {
    "values": "minecraft:sea_pickle"
}
new tags.blocks(piglin_head) {
    "values": ["minecraft:piglin_head"]
}
new tags.blocks(pink_petals) {
    "values": ["minecraft:pink_petals"]
}
new tags.blocks(pitcher_crop) {
    "values": ["minecraft:pitcher_crop"]
}
new tags.blocks(pressure_plate) {
    "values": ["#minecraft:pressure_plates"]
}
new tags.blocks(rail) {
	"values": [
        "minecraft:rail",
		"minecraft:activator_rail",
		"minecraft:detector_rail",
		"minecraft:powered_rail"
	]
}
new tags.blocks(repeater_shaped) {
    "values": [
        "minecraft:repeater",
		"minecraft:comparator"
	]
}
new tags.blocks(rod) {
    "values": [
        "minecraft:end_rod",
        "minecraft:lightning_rod"
    ]
}
// exclude mangrove & azalea
new tags.blocks(sapling) {
    "values": [
        "minecraft:oak_sapling",
        "minecraft:spruce_sapling",
        "minecraft:birch_sapling",
        "minecraft:jungle_sapling",
        "minecraft:acacia_sapling",
        "minecraft:dark_oak_sapling",
        "minecraft:cherry_sapling"
    ]
}
new tags.blocks(sculk_sensor) {
    "values": [
        "minecraft:sculk_sensor",
        "minecraft:calibrated_sculk_sensor"
    ]
}
new tags.blocks(seagrass) {
    "values": ["minecraft:seagrass"]
}
new tags.blocks(short_crop) {
    "values": [
        "minecraft:carrots",
        "minecraft:potatoes"
    ]
}
new tags.blocks(slab) {
    "values": [
        "#minecraft:slabs",
        "minecraft:sculk_sensor",
        "minecraft:calibrated_sculk_sensor"
    ]
}
new tags.blocks(small_dripleaf) {
    "values": ["minecraft:small_dripleaf"]
}
new tags.blocks(snow) {
    "values": ["minecraft:snow"]
}
new tags.blocks(spore_blossom) {
    "values": ["minecraft:spore_blossom"]
}
new tags.blocks(sugar_cane_like) {
	"values": [
		"minecraft:sugar_cane",
		"minecraft:tall_seagrass"
	]
}
new tags.blocks(stair) {
    "values": ["#minecraft:stairs"]
}
new tags.blocks(standing_sign_or_banner) {
    "values": [
		"#minecraft:standing_signs",
		"minecraft:white_banner",
		"minecraft:orange_banner",
		"minecraft:magenta_banner",
		"minecraft:light_blue_banner",
		"minecraft:yellow_banner",
		"minecraft:lime_banner",
		"minecraft:pink_banner",
		"minecraft:gray_banner",
		"minecraft:light_gray_banner",
		"minecraft:cyan_banner",
		"minecraft:purple_banner",
		"minecraft:blue_banner",
		"minecraft:brown_banner",
		"minecraft:green_banner",
		"minecraft:red_banner",
		"minecraft:black_banner",
        "minecraft:twisting_vines",
		"minecraft:twisting_vines_plant"
	]
}
new tags.blocks(stem) {
    "values": [
        "minecraft:melon_stem",
        "minecraft:pumpkin_stem"
    ]
}
new tags.blocks(stonecutter) {
    "values": ["minecraft:stonecutter"]
}
new tags.blocks(structure_void) {
    "values": ["minecraft:structure_void"]
}
new tags.blocks(tall_crop) {
	"values": [
        "minecraft:beetroots",
        "minecraft:wheat"
    ]
}
new tags.blocks(torchflower_crop) {
    "values": ["minecraft:torchflower_crop"]
}
new tags.blocks(trapdoor) {
    "values": ["#minecraft:trapdoors"]
}
new tags.blocks(tripwire) {
    "values": ["minecraft:tripwire"]
}
new tags.blocks(tripwire_hook) {
    "values": ["minecraft:tripwire_hook"]
}
new tags.blocks(turtle_egg) {
    "values": ["minecraft:turtle_egg"]
}
new tags.blocks(twisting_vines) {
    "values": ["minecraft:twisting_vines"]
}
new tags.blocks(vertical_torch) {
	"values": [
		"minecraft:torch",
		"minecraft:redstone_torch",
		"minecraft:soul_torch"
	]
}
new tags.blocks(vine_like) {
    "values": [
        "minecraft:vine",
        "minecraft:sculk_vein",
        "minecraft:glow_lichen"
    ]
}
new tags.blocks(wall) {
    "values": ["#minecraft:walls"]
}
new tags.blocks(wall_sign) {
    "values": ["#minecraft:wall_signs"]
}
new tags.blocks(wall_torch) {
	"values": [
		"minecraft:wall_torch",
		"minecraft:redstone_wall_torch",
		"minecraft:soul_wall_torch"
	]
}
new tags.blocks(weeping_vines) {
    "values": ["minecraft:weeping_vines"]
}

//summon minecraft:marker 0 0 0 {Tags:["retina.height","retina.ignore"]};
$overflow_risk = 2147483647;
$overflow_risk /= SCALE;
$max_depth ??= 150;

class traverse {
    function setup() {
        // guard condition
        Hardcode.repeatList(
            "[i]",
            () => {
                $int_[i] = data get entity @e[type=marker,tag=retina.height,limit=1] Pos[0] 1;
                $test_[i] = $int_[i];
                $test_[i] /= $overflow_risk;
                if (!$test_[i] matches -1..0) Text.tellraw(@a, "&<dark_red>[Error] &<red>Raycast [i] coordinate of &<$int_[i]> is out of range (-&<$overflow_risk>, &<$overflow_risk>)");
                if (!$test_[i] matches -1..0) return 0;
            },
            ["X", "Z"] // not worried about Y since that's never gonna be high enough to overflow
        );
        
        $input_pitch = data get entity @s Rotation[1] 10;
        $input_yaw = data get entity @s Rotation[0] 10;
        if ($debug_messages) Text.tellraw(@a, "&<!bold, white>Pitch: &<$input_pitch, red>, &<!bold, white>Yaw: &<$input_yaw, red>");
        Math.gimbal_to_vec();
        if ($debug_messages) Text.tellraw(@a, "Facing Vector: &<gold>[&<$output_vec3.X>, &<$output_vec3.Y>, &<$output_vec3.Z>]");

        execute anchored eyes run summon minecraft:marker ^ ^ ^ {Tags:["retina.height"]};
        $X = data get entity @e[type=marker,tag=retina.height,limit=1] Pos[0] 1024;
        $Y = data get entity @e[type=marker,tag=retina.height,limit=1] Pos[1] 1024;
        //$Y += 1620;
        $Z = data get entity @e[type=marker,tag=retina.height,limit=1] Pos[2] 1024;
        kill @e[type=marker,tag=retina.height,limit=1];
        Hardcode.repeatList(
            "[i]",
            () => {
                $origin_[i] = $[i];
                $frac_origin_[i] = $[i];
                $frac_origin_[i] %= 1024;
                $step_[i] = 0;

                if ($output_vec3.[i] < 0) $sign_[i] = -1;
                if ($output_vec3.[i] >= 0) $sign_[i] = 1;

                $delta_[i] = 1048576;
                $delta_[i] /= $output_vec3.[i];
                $delta_[i] /= $sign_[i];

                $distance_[i] = $[i];
                $distance_[i] *= $sign_[i];
                $distance_[i] *= -1;
                $distance_[i] %= 1024;
                $distance_[i] *= $delta_[i];
                $distance_[i] /= 1024;

                if ($output_vec3.[i] == 0) $delta_[i] = 2147483647;
                if ($output_vec3.[i] == 0) $distance_[i] = 2147483647;

                $int_[i] = $[i];
                $int_[i] /= 1024;
                $frac_[i] = $[i];
                $frac_[i] %= 1024;
            },
            ["X", "Y", "Z"]
        );
        if ($debug_messages) Text.tellraw(@a, "Origin: &<yellow>[&<$int_X>, &<$int_Y>, &<$int_Z>]");

        $step = 0;
        $end = 0;
        $offset_Y = data get entity @s Pos[1] -1024; 
        $offset_Y += $Y;
        if ($offset_Y matches 1657..1659) execute positioned ~ ~1.62 ~ run traverse.loop();
        if ($offset_Y matches 1299..1301) execute positioned ~ ~1.27 ~ run traverse.loop();
        if ($offset_Y matches 408..410) execute positioned ~ ~0.4 ~ run traverse.loop();
    }
    function loop() {
        // Find nearest axis
        $shortest_distance = $distance_X;
        $shortest_distance < $distance_Y;
        $shortest_distance < $distance_Z;
        if ($shortest_distance = $distance_Z) $nearest_axis = 2;
        if ($shortest_distance = $distance_Y) $nearest_axis = 1;
        if ($shortest_distance = $distance_X) $nearest_axis = 0;
        
        // Process data based on nearest axis
        if ($nearest_axis = 0 && $step < $max_depth && $end = 0) traverse.x();
        if ($nearest_axis = 1 && $step < $max_depth && $end = 0) traverse.y();
        if ($nearest_axis = 2 && $step < $max_depth && $end = 0) traverse.z();
    }
    function x() {
        if ($debug_messages) Text.tellraw(@a, "Distances to each block: &<green>[&<$distance_X>, &<$distance_Y>, &<$distance_Z>]");
        if ($debug_messages) Text.tellraw(@a, "&<!bold, white>Closest direction: &<bold,aqua>X");
        $distance_X += $delta_X;
        $step_X += $sign_X;
        $int_X += $sign_X;

        Hardcode.repeatList(
            "[i]",
            () => {
                $relative_[i] = $output_vec3.[i];
                $relative_[i] *= $shortest_distance;
                $relative_[i] /= 1024;
                $[i] = $relative_[i];
                $[i] += $origin_[i];

                $frac_[i] = $[i];
                $frac_[i] %= 1024;
            },
            ["X", "Y", "Z"]
        );

        if ($sign_X = -1) execute positioned ~-1 ~0 ~0 run check.main();
        if ($sign_X = 1) execute positioned ~1 ~0 ~0 run check.main();
    }
    function y() {
        if ($debug_messages) Text.tellraw(@a, "Distances to each block: &<green>[&<$distance_X>, &<$distance_Y>, &<$distance_Z>]");
        if ($debug_messages) Text.tellraw(@a, "&<!bold, white>Closest direction: &<bold,aqua>Y");
        $distance_Y += $delta_Y;
        $step_Y += $sign_Y;
        $int_Y += $sign_Y;

        Hardcode.repeatList(
            "[i]",
            () => {
                $relative_[i] = $output_vec3.[i];
                $relative_[i] *= $shortest_distance;
                $relative_[i] /= 1024;
                $[i] = $relative_[i];
                $[i] += $origin_[i];

                $frac_[i] = $[i];
                $frac_[i] %= 1024;
            },
            ["X", "Y", "Z"]
        );

        if ($sign_Y = -1) execute positioned ~0 ~-1 ~0 run check.main();
        if ($sign_Y = 1) execute positioned ~0 ~1 ~0 run check.main();

    }
    function z() {
        if ($debug_messages) Text.tellraw(@a, "Distances to each block: &<green>[&<$distance_X>, &<$distance_Y>, &<$distance_Z>]");
        if ($debug_messages) Text.tellraw(@a, "&<!bold, white>Closest direction: &<bold,aqua>Z");
        $distance_Z += $delta_Z;
        $step_Z += $sign_Z;
        $int_Z += $sign_Z;
        
        Hardcode.repeatList(
            "[i]",
            () => {
                $relative_[i] = $output_vec3.[i];
                $relative_[i] *= $shortest_distance;
                $relative_[i] /= 1024;
                $[i] = $relative_[i];
                $[i] += $origin_[i];

                $frac_[i] = $[i];
                $frac_[i] %= 1024;
            },
            ["X", "Y", "Z"]
        );

        if ($sign_Z = -1) execute positioned ~0 ~0 ~-1 run check.main();
        if ($sign_Z = 1) execute positioned ~0 ~0 ~1 run check.main();
    }
}   


class check {
    function main() {
        $step ++;
        $end = false;

        check.block.main();
        
        if ($step >= $max_depth) $end = true;
        if ($step >= $max_depth && $debug_messages) Text.tellraw(@a, "&<italic, light_purple>Failed to find anything within &<$step> blocks. End coordinates: &<bold>[&<$int_X>, &<$int_Y>, &<$int_Z>]");
        if ($end = 0) traverse.loop();
    }
    class block {
        function main() {
            if (block ~ ~ ~ #retina:airs) return 0;
            check.block.found();
            if (!$end && $debug_messages) Text.tellraw(@a, "&<italic, white>No block... Coordinates: &<blue>[&<$int_X>, &<$int_Y>, &<$int_Z>]");
            if (!$end) return 0;
            
            if ($debug_messages) Text.tellraw(@a, "&<bold, underlined, gray>Block has been hit! Coordinates: &<blue>[&<$int_X>, &<$int_Y>, &<$int_Z>]");
            if ($debug_gold) setblock ~ ~ ~ gold_block;
            particle minecraft:end_rod ~ ~ ~ 0 0 0 0 1 force @a;
        }
        function found() {
            // clear residual data from `Surfaces`
            data remove storage retina:data Surfaces;
            data modify storage retina:data Surfaces set value {Top:[],Bottom:[],West:[],East:[],North:[],South:[]};
            check.block.get_hitbox();
            // See if the ray hits any surface
            if (data storage retina:data Surfaces) find_closest_surface.main(); 
            if ($end) $block_distance = $shortest_distance;
        }
        function get_hitbox() {
            Hardcode.repeatList(
                "[shape]",
                () => { 
                    if (block ~ ~ ~ #retina:[shape]) hitbox.[shape]();
                    if (block ~ ~ ~ #retina:[shape]) return 1;
                },
                ["anvil", "attached_stem", "bed", "bell", "berries", "brewing_stand", "button", 
                "cactus_shaped", "cake", "campfire", "carpet", "cauldron", "chain", "chest", "composter", "conduit", "coral_fan", "coral_plant",
                "daylight_detector", "door", "end_portal_frame", "farmland_shaped", "fence_gate", "fence", "fire", "grass_shaped", 
                "head", "hanging_roots", "ladder", "lantern", "lever", "mushroom_shaped", "nether_fungus", "nether_sprouts",
                "pane_shaped", "pickle", "piglin_head", "pink_petals", "pitcher_crop", "pressure_plate", "rail", "repeater_shaped", "rod",
                "sapling", "seagrass", "short_crop", "slab", "small_dripleaf", "snow", "spore_blossom", "sugar_cane_like", "stair", "standing_sign_or_banner", 
                "stem", "stonecutter", "structure_void", "tall_crop", "torchflower_crop", "trapdoor", "tripwire", "tripwire_hook", "turtle_egg", "twisting_vines", 
                "vertical_torch", "vine_like", "wall_sign", "wall_torch", "wall", "weeping_vines"]
            );
            hitbox.cubic(); // if it doesn't match any special hitbox, assume it's a 1x1x1 cube.
        }
    }
}

class find_closest_surface {
    function main() {
        // @within check.block.found()

        $min_distance_to_surface = 1733; // sqrt(3)
        Hardcode.repeatLists(
            ["[direction]", "[axis]", "[sign]"],
            () => {if (!$sign_[axis] = [sign] && $end = 0) find_closest_surface.[direction]();},
            [
                ["east", "west", "top", "bottom", "south", "north"],
                ["X", "X", "Y", "Y", "Z", "Z"],
                ["1", "-1", "1", "-1", "1", "-1"]
            ]
        );
    }
    function store_coords() {
        Hardcode.repeatLists(
            ["[axis]", "[num]", "$index"],
            () => {
                $[axis][num] = data get storage retina:data List[-1][$index];
                $k = 1024;
                $k *= $step_[axis];
                $k -= $frac_origin_[axis];
                $[axis][num] += $k;
            },
            [
                ["X", "Y", "Z", "X", "Y", "Z"],
                ["0", "0", "0", "1", "1", "1"],
                ["0", "1", "2", "3", "4", "5"]
            ]
        );
    }
    function west() {
        // @within find_closest_surface.main()

        data modify storage retina:data List set from storage retina:data Surfaces.West;
        $surfaces = data get storage retina:data List;
        $cuboid_id = $surfaces;
        $cuboid_id --;
        while ($surfaces >= 1) {
            find_closest_surface.store_coords(); // Store all coordinates to scores (List[0] and List[3] should have the same values)

            if ($debug_messages) Text.tellraw(@a, "&<italic,bold>[WEST] &<!bold>Relative X: &<!italic,light_purple,$relative_X>, &<white>X0: &<light_purple,$X0>");
            if ($relative_X <= $X0) {
                if ($output_vec3.X == 0) return 0; // The if block is actually its own function, so this gives control back to the while loop.
                $distance = $X0;
                $distance /= $output_vec3.X;
                if ($debug_messages) Text.tellraw(@a, "&<italic>Distance: &<light_purple,$distance>");
            
                // If this distance is closer than the minimum distance to a surface hit by the ray found so far, see if the ray intersects with the surface
                unless ($distance < $min_distance_to_surface) return 0;
                
                $X_intersection = $X0; // Get x position of the intersection
            
                // Get y position of the intersection
                $Y_intersection = $distance;
                $Y_intersection *= $output_vec3.Y;
            
                // Get z position of the intersection
                $Z_intersection = $distance;
                $Z_intersection *= $output_vec3.Z;
            
                if ($debug_messages) Text.tellraw(@a, "&<italic,bold>[WEST] &<!bold>Y-Int: &<!italic,light_purple,$Y_intersection>, &<italic,white>Y0: &<!italic,light_purple,$Y0>, &<italic,white>Y1: &<!italic,light_purple,$Y1>");
                if ($debug_messages) Text.tellraw(@a, "&<italic,bold>[WEST] &<!bold>Z-Int: &<!italic,light_purple,$Z_intersection>, &<italic,white>Z0: &<!italic,light_purple,$Z0>, &<italic,white>Z1: &<!italic,light_purple,$Z1>"); 
                // If the ray hits the surface, return this as the minimum distance and the contact surface
                if ($Y_intersection >= $Y0 && $Y_intersection <= $Y1 && $Z_intersection >= $Z0 && $Z_intersection <= $Z1) find_closest_surface.ray_intersects_with_surface();
                if ($Y_intersection >= $Y0 && $Y_intersection <= $Y1 && $Z_intersection >= $Z0 && $Z_intersection <= $Z1) data modify storage retina:output HitFace set value "West";
            }

            // Loop this function
            data remove storage retina:data List[-1];
            $surfaces --;
            $cuboid_id --;
        }
    }
    function east() {
        // @within find_closest_surface.main()

        data modify storage retina:data List set from storage retina:data Surfaces.East;
        $surfaces = data get storage retina:data List;
        $cuboid_id = $surfaces;
        $cuboid_id --;
        while ($surfaces >= 1) {
            find_closest_surface.store_coords(); // Store all coordinates to scores (List[0] and List[3] should have the same values)
            
            if ($debug_messages) Text.tellraw(@a, "&<italic,bold>[EAST] &<!bold>Relative X: &<!italic,light_purple,$relative_X>, &<white>X0: &<light_purple,$X0>");
            if ($relative_X <= $X0) {
                if ($output_vec3.X == 0) return 0; // The if block is actually its own function, so this gives control back to the while loop.
                $distance = $X0;
                $distance /= $output_vec3.X;
                if ($debug_messages) Text.tellraw(@a, "&<italic>Distance: &<light_purple,$distance>");
            
                // If this distance is closer than the minimum distance to a surface hit by the ray found so far, see if the ray intersects with the surface
                unless ($distance < $min_distance_to_surface) return 0;

                $X_intersection = $X0; // Get x position of the intersection
            
                // Get y position of the intersection
                $Y_intersection = $distance;
                $Y_intersection *= $output_vec3.Y;
            
                // Get z position of the intersection
                $Z_intersection = $distance;
                $Z_intersection *= $output_vec3.Z;
            
                if ($debug_messages) Text.tellraw(@a, "&<italic,bold>[EAST] &<!bold>Y-Int: &<!italic,light_purple,$Y_intersection>, &<italic,white>Y0: &<!italic,light_purple,$Y0>, &<italic,white>Y1: &<!italic,light_purple,$Y1>");
                if ($debug_messages) Text.tellraw(@a, "&<italic,bold>[EAST] &<!bold>Z-Int: &<!italic,light_purple,$Z_intersection>, &<italic,white>Z0: &<!italic,light_purple,$Z0>, &<italic,white>Z1: &<!italic,light_purple,$Z1>"); 
                // If the ray hits the surface, return this as the minimum distance and the contact surface
                if ($Y_intersection >= $Y0 && $Y_intersection <= $Y1 && $Z_intersection >= $Z0 && $Z_intersection <= $Z1) find_closest_surface.ray_intersects_with_surface();
                if ($Y_intersection >= $Y0 && $Y_intersection <= $Y1 && $Z_intersection >= $Z0 && $Z_intersection <= $Z1) data modify storage retina:output HitFace set value "East";
            }

            // Loop this function
            data remove storage retina:data List[-1];
            $surfaces --;
            $cuboid_id --;
        }
    }
    function bottom() {
        // @within find_closest_surface.main()

        data modify storage retina:data List set from storage retina:data Surfaces.Bottom;
        $surfaces = data get storage retina:data List;
        $cuboid_id = $surfaces;
        $cuboid_id --;
        while ($surfaces >= 1) {
            find_closest_surface.store_coords(); // Store all coordinates to scores (List[1] and List[4] should have the same values)
            
            if ($relative_Y >= $Y0) {
                if ($output_vec3.Y == 0) return 0; // The if block is actually its own function, so this gives control back to the while loop.
                $distance = $Y0;
                $distance /= $output_vec3.Y;
            
                // If this distance is closer than the minimum distance to a surface hit by the ray found so far, see if the ray intersects with the surface
                unless ($distance < $min_distance_to_surface) return 0;

                // Get x position of the intersection
                $X_intersection = $distance;
                $X_intersection *= $output_vec3.X;
                    
                $Y_intersection = $Y0; // Get y position of the intersection
            
                // Get z position of the intersection
                $Z_intersection = $distance;
                $Z_intersection *= $output_vec3.Z;
                            
                // If the ray hits the surface, return this as the minimum distance and the contact surface
                if ($X_intersection >= $X0 && $X_intersection <= $X1 && $Z_intersection >= $Z0 && $Z_intersection <= $Z1) find_closest_surface.ray_intersects_with_surface();
                if ($X_intersection >= $X0 && $X_intersection <= $X1 && $Z_intersection >= $Z0 && $Z_intersection <= $Z1) data modify storage retina:output HitFace set value "Bottom";
            }

            // Loop this function
            data remove storage retina:data List[-1];
            $surfaces --;
            $cuboid_id --;
        }
    }
    function top() {
        // @within find_closest_surface.main()

        data modify storage retina:data List set from storage retina:data Surfaces.Top;
        $surfaces = data get storage retina:data List;
        $cuboid_id = $surfaces;
        $cuboid_id --;
        while ($surfaces >= 1) {
            find_closest_surface.store_coords(); // Store all coordinates to scores (List[1] and List[4] should have the same values)

            if ($relative_Y >= $Y0) {
                if ($output_vec3.Y == 0) return 0; // The if block is actually its own function, so this gives control back to the while loop.
                $distance = $Y0;
                $distance /= $output_vec3.Y;
            
                // If this distance is closer than the minimum distance to a surface hit by the ray found so far, see if the ray intersects with the surface
                unless ($distance < $min_distance_to_surface) return 0;

                // Get x position of the intersection
                $X_intersection = $distance;
                $X_intersection *= $output_vec3.X;
                    
                $Y_intersection = $Y0; // Get y position of the intersection
            
                // Get z position of the intersection
                $Z_intersection = $distance;
                $Z_intersection *= $output_vec3.Z;      
            
                // If the ray hits the surface, return this as the minimum distance and the contact surface
                if ($X_intersection >= $X0 && $X_intersection <= $X1 && $Z_intersection >= $Z0 && $Z_intersection <= $Z1) find_closest_surface.ray_intersects_with_surface();
                if ($X_intersection >= $X0 && $X_intersection <= $X1 && $Z_intersection >= $Z0 && $Z_intersection <= $Z1) data modify storage retina:output HitFace set value "Top";
            }

            // Loop this function
            data remove storage retina:data List[-1];
            $surfaces --;
            $cuboid_id --;
        }
    }
    function north() {
        // @within find_closest_surface.main()

        data modify storage retina:data List set from storage retina:data Surfaces.North;
        $surfaces = data get storage retina:data List;
        $cuboid_id = $surfaces;
        $cuboid_id --;
        while ($surfaces >= 1) {
            find_closest_surface.store_coords(); // Store all coordinates to scores (List[2] and List[5] should have the same values)
            
            if ($debug_messages) Text.tellraw(@a, "&<italic,bold>[NORTH] &<!bold>Relative Z: &<!italic,light_purple,$relative_Z>, &<white>Z0: &<light_purple,$Z0>");
            if ($relative_Z <= $Z0) {
                if ($output_vec3.Z == 0) return 0; // The if block is actually its own function, so this gives control back to the while loop.
                $distance = $Z0;
                $distance /= $output_vec3.Z;
                if ($debug_messages) Text.tellraw(@a, "&<italic>Distance: &<light_purple,$distance>");
            
                // If this distance is closer than the minimum distance to a surface hit by the ray found so far, see if the ray intersects with the surface
                unless ($distance < $min_distance_to_surface) return 0;

                // Get x position of the intersection
                $X_intersection = $distance;
                $X_intersection *= $output_vec3.X;
                    
                // Get y position of the intersection
                $Y_intersection = $distance;
                $Y_intersection *= $output_vec3.Y;
                
                $Z_intersection = $Z0; // Get z position of the intersection
            
                if ($debug_messages) Text.tellraw(@a, "&<italic,bold>[NORTH] &<!bold>X-Int: &<!italic,light_purple,$X_intersection>, &<italic,white>X0: &<!italic,light_purple,$X0>, &<italic,white>X1: &<!italic,light_purple,$X1>");
                if ($debug_messages) Text.tellraw(@a, "&<italic,bold>[NORTH] &<!bold>Y-Int: &<!italic,light_purple,$Y_intersection>, &<italic,white>Y0: &<!italic,light_purple,$Y0>, &<italic,white>Y1: &<!italic,light_purple,$Y1>"); 
                // If the ray hits the surface, return this as the minimum distance and the contact surface
                if ($X_intersection >= $X0 && $X_intersection <= $X1 && $Y_intersection >= $Y0 && $Y_intersection <= $Y1) find_closest_surface.ray_intersects_with_surface();
                if ($X_intersection >= $X0 && $X_intersection <= $X1 && $Y_intersection >= $Y0 && $Y_intersection <= $Y1) data modify storage retina:output HitFace set value "North";
            }

            // Loop this function
            data remove storage retina:data List[-1];
            $surfaces --;
            $cuboid_id --;
        }
    }
    function south() {
        // @within find_closest_surface.main()

        data modify storage retina:data List set from storage retina:data Surfaces.South;
        $surfaces = data get storage retina:data List;
        $cuboid_id = $surfaces;
        $cuboid_id --;
        while ($surfaces >= 1) {
            find_closest_surface.store_coords(); // Store all coordinates to scores (List[2] and List[5] should have the same values)
            
            if ($debug_messages) Text.tellraw(@a, "&<italic,bold>[SOUTH] &<!bold>Relative Z: &<!italic,light_purple,$relative_Z>, &<white>Z0: &<light_purple,$Z0>");
            if ($relative_Z <= $Z0) {
                if ($output_vec3.Z == 0) return 0; // The if block is actually its own function, so this gives control back to the while loop.
                $distance = $Z0;
                $distance /= $output_vec3.Z;
                if ($debug_messages) Text.tellraw(@a, "&<italic>Distance: &<light_purple,$distance>");
            
                // If this distance is closer than the minimum distance to a surface hit by the ray found so far, see if the ray intersects with the surface
                unless ($distance < $min_distance_to_surface) return 0;

                // Get x position of the intersection
                $X_intersection = $distance;
                $X_intersection *= $output_vec3.X;
                    
                // Get y position of the intersection
                $Y_intersection = $distance;
                $Y_intersection *= $output_vec3.Y;
                
                $Z_intersection = $Z0; // Get z position of the intersection
            
                if ($debug_messages) Text.tellraw(@a, "&<italic,bold>[SOUTH] &<!bold>X-Int: &<!italic,light_purple,$X_intersection>, &<italic,white>X0: &<!italic,light_purple,$X0>, &<italic,white>X1: &<!italic,light_purple,$X1>");
                if ($debug_messages) Text.tellraw(@a, "&<italic,bold>[SOUTH] &<!bold>Y-Int: &<!italic,light_purple,$Y_intersection>, &<italic,white>Y0: &<!italic,light_purple,$Y0>, &<italic,white>Y1: &<!italic,light_purple,$Y1>"); 
                // If the ray hits the surface, return this as the minimum distance and the contact surface
                if ($X_intersection >= $X0 && $X_intersection <= $X1 && $Y_intersection >= $Y0 && $Y_intersection <= $Y1) find_closest_surface.ray_intersects_with_surface();
                if ($X_intersection >= $X0 && $X_intersection <= $X1 && $Y_intersection >= $Y0 && $Y_intersection <= $Y1) data modify storage retina:output HitFace set value "South";
            }

            // Loop this function
            data remove storage retina:data List[-1];
            $surfaces --;
            $cuboid_id --;
        }
    }

    function ray_intersects_with_surface() {
        // Establishes the current surface as the first the ray will hit.
        // This function only runs if the ray is closer to this surface than it is to any other surface analysed so far, but there is no guarantee that this is the surface the ray will eventually hit first.
        
        // @within find_closest_surface.bottom()
        // @within find_closest_surface.east()
        // @within find_closest_surface.north()
        // @within find_closest_surface.south()
        // @within find_closest_surface.top()
        // @within find_closest_surface.west()

        $end = true;
        $closest_cuboid_id = $cuboid_id;
        $min_distance_to_surface = $distance;

        data modify storage retina:data ContactSurface set from storage retina:data List[-1];
    }
}

class hitbox {  
    function anvil() {
        data modify storage retina:data Surfaces set value {Top: [[128, 256, 128, 896, 256, 896]], Bottom: [[128, 0, 128, 896, 0, 896]], West: [[128, 0, 128, 128, 256, 896]], East: [[896, 0, 128, 896, 256, 896]], North: [[128, 0, 128, 896, 256, 128]], South: [[128, 0, 896, 896, 256, 896]]};

        // East or West
        if (!block ~ ~ ~ #minecraft:anvil[facing=north] && !block ~ ~ ~ #minecraft:anvil[facing=south]) data modify storage retina:data NewSurfaces.Top set value [[192, 320, 256, 832, 320, 768], [256, 640, 384, 768, 640, 640], [0, 1024, 192, 1024, 1024, 832]];
        if (!block ~ ~ ~ #minecraft:anvil[facing=north] && !block ~ ~ ~ #minecraft:anvil[facing=south]) data modify storage retina:data NewSurfaces.Bottom set value [[192, 256, 256, 832, 256, 768], [256, 320, 384, 768, 320, 640], [0, 640, 192, 1024, 640, 832]];
        if (!block ~ ~ ~ #minecraft:anvil[facing=north] && !block ~ ~ ~ #minecraft:anvil[facing=south]) data modify storage retina:data NewSurfaces.West set value [[192, 256, 256, 192, 320, 768], [256, 320, 384, 256, 640, 640], [0, 640, 192, 0, 1024, 832]];
        if (!block ~ ~ ~ #minecraft:anvil[facing=north] && !block ~ ~ ~ #minecraft:anvil[facing=south]) data modify storage retina:data NewSurfaces.East set value [[832, 256, 256, 832, 320, 768], [768, 320, 384, 768, 640, 640], [1024, 640, 192, 1024, 1024, 832]];
        if (!block ~ ~ ~ #minecraft:anvil[facing=north] && !block ~ ~ ~ #minecraft:anvil[facing=south]) data modify storage retina:data NewSurfaces.North set value [[192, 256, 256, 832, 320, 256], [256, 320, 384, 768, 640, 384], [0, 640, 192, 1024, 1024, 192]];
        if (!block ~ ~ ~ #minecraft:anvil[facing=north] && !block ~ ~ ~ #minecraft:anvil[facing=south]) data modify storage retina:data NewSurfaces.South set value [[192, 256, 768, 832, 320, 768], [256, 320, 640, 768, 640, 640], [0, 640, 832, 1024, 1024, 832]];

        // North or South
        if (!block ~ ~ ~ #minecraft:anvil[facing=east] && !block ~ ~ ~ #minecraft:anvil[facing=west]) data modify storage retina:data NewSurfaces.Top set value [[256, 320, 192, 768, 320, 832], [384, 640, 256, 640, 640, 768], [192, 1024, 0, 832, 1024, 1024]];
        if (!block ~ ~ ~ #minecraft:anvil[facing=east] && !block ~ ~ ~ #minecraft:anvil[facing=west]) data modify storage retina:data NewSurfaces.Bottom set value [[256, 256, 192, 768, 256, 832], [384, 320, 256, 640, 320, 768], [192, 640, 0, 832, 640, 1024]];
        if (!block ~ ~ ~ #minecraft:anvil[facing=east] && !block ~ ~ ~ #minecraft:anvil[facing=west]) data modify storage retina:data NewSurfaces.West set value [[256, 256, 192, 256, 320, 832], [384, 320, 256, 384, 640, 768], [192, 640, 0, 192, 1024, 1024]];
        if (!block ~ ~ ~ #minecraft:anvil[facing=east] && !block ~ ~ ~ #minecraft:anvil[facing=west]) data modify storage retina:data NewSurfaces.East set value [[768, 256, 192, 768, 320, 832], [640, 320, 256, 640, 640, 768], [832, 640, 0, 832, 1024, 1024]];
        if (!block ~ ~ ~ #minecraft:anvil[facing=east] && !block ~ ~ ~ #minecraft:anvil[facing=west]) data modify storage retina:data NewSurfaces.North set value [[256, 256, 192, 768, 320, 192], [384, 320, 256, 640, 640, 256], [192, 640, 0, 832, 1024, 0]];
        if (!block ~ ~ ~ #minecraft:anvil[facing=east] && !block ~ ~ ~ #minecraft:anvil[facing=west]) data modify storage retina:data NewSurfaces.South set value [[256, 256, 832, 768, 320, 832], [384, 320, 768, 640, 640, 768], [192, 640, 1024, 832, 1024, 1024]];

        // Add to retina:data (using another storage is needed here as you cannot append several values to a list directly)
        data modify storage retina:data Surfaces.Top append from storage retina:data NewSurfaces.Top[];
        data modify storage retina:data Surfaces.Bottom append from storage retina:data NewSurfaces.Bottom[];
        data modify storage retina:data Surfaces.West append from storage retina:data NewSurfaces.West[];
        data modify storage retina:data Surfaces.East append from storage retina:data NewSurfaces.East[];
        data modify storage retina:data Surfaces.North append from storage retina:data NewSurfaces.North[];
        data modify storage retina:data Surfaces.South append from storage retina:data NewSurfaces.South[];
    }
    function attached_stem() {
        if (block ~ ~ ~ #retina:attached_stem[facing=east]) data modify storage retina:data Surfaces set value {Top: [[384, 640, 384, 1024, 640, 640]], Bottom: [[384, 0, 384, 1024, 0, 640]], West: [[384, 0, 384, 384, 640, 640]], East: [[1024, 0, 384, 1024, 640, 640]], North: [[384, 0, 384, 1024, 640, 384]], South: [[384, 0, 640, 1024, 640, 640]]}
        if (block ~ ~ ~ #retina:attached_stem[facing=west]) data modify storage retina:data Surfaces set value {Top: [[0, 640, 384, 640, 640, 640]], Bottom: [[0, 0, 384, 640, 0, 640]], West: [[0, 0, 384, 0, 640, 640]], East: [[640, 0, 384, 640, 640, 640]], North: [[0, 0, 384, 640, 640, 384]], South: [[0, 0, 640, 640, 640, 640]]}
        if (block ~ ~ ~ #retina:attached_stem[facing=north]) data modify storage retina:data Surfaces set value {Top: [[384, 640, 0, 640, 640, 640]], Bottom: [[384, 0, 0, 640, 0, 640]], West: [[384, 0, 0, 384, 640, 640]], East: [[640, 0, 0, 640, 640, 640]], North: [[384, 0, 0, 640, 640, 0]], South: [[384, 0, 640, 640, 640, 640]]}
        if (block ~ ~ ~ #retina:attached_stem[facing=south]) data modify storage retina:data Surfaces set value {Top: [[384, 640, 384, 640, 640, 1024]], Bottom: [[384, 0, 384, 640, 0, 1024]], West: [[384, 0, 384, 384, 640, 1024]], East: [[640, 0, 384, 640, 640, 1024]], North: [[384, 0, 384, 640, 640, 384]], South: [[384, 0, 1024, 640, 640, 1024]]}
    }
    function bed() {
        if (block ~ ~ ~ #minecraft:beds[part=foot, facing=east]) data modify storage retina:data Surfaces set value {Top: [[0, 576, 0, 1024, 576, 1024], [0, 192, 0, 192, 192, 192], [0, 192, 832, 192, 192, 1024]], Bottom: [[0, 192, 0, 1024, 192, 1024], [0, 0, 0, 192, 0, 192], [0, 0, 832, 192, 0, 1024]], West: [[0, 192, 0, 0, 576, 1024], [0, 0, 0, 0, 192, 192], [0, 0, 832, 0, 192, 1024]], East: [[1024, 192, 0, 1024, 576, 1024], [192, 0, 0, 192, 192, 192], [192, 0, 832, 192, 192, 1024]], North: [[0, 192, 0, 1024, 576, 0], [0, 0, 0, 192, 192, 0], [0, 0, 832, 192, 192, 832]], South: [[0, 192, 1024, 1024, 576, 1024], [0, 0, 192, 192, 192, 192], [0, 0, 1024, 192, 192, 1024]]}
        if (block ~ ~ ~ #minecraft:beds[part=foot, facing=south]) data modify storage retina:data Surfaces set value {Top: [[0, 576, 0, 1024, 576, 1024], [0, 192, 0, 192, 192, 192], [832, 192, 0, 1024, 192, 192]], Bottom: [[0, 192, 0, 1024, 192, 1024], [0, 0, 0, 192, 0, 192], [832, 0, 0, 1024, 0, 192]], West: [[0, 192, 0, 0, 576, 1024], [0, 0, 0, 0, 192, 192], [832, 0, 0, 832, 192, 192]], East: [[1024, 192, 0, 1024, 576, 1024], [192, 0, 0, 192, 192, 192], [1024, 0, 0, 1024, 192, 192]], North: [[0, 192, 0, 1024, 576, 0], [0, 0, 0, 192, 192, 0], [832, 0, 0, 1024, 192, 0]], South: [[0, 192, 1024, 1024, 576, 1024], [0, 0, 192, 192, 192, 192], [832, 0, 192, 1024, 192, 192]]}
        if (block ~ ~ ~ #minecraft:beds[part=foot, facing=west]) data modify storage retina:data Surfaces set value {Top: [[0, 576, 0, 1024, 576, 1024], [832, 192, 832, 1024, 192, 1024], [832, 192, 0, 1024, 192, 192]], Bottom: [[0, 192, 0, 1024, 192, 1024], [832, 0, 832, 1024, 0, 1024], [832, 0, 0, 1024, 0, 192]], West: [[0, 192, 0, 0, 576, 1024], [832, 0, 832, 832, 192, 1024], [832, 0, 0, 832, 192, 192]], East: [[1024, 192, 0, 1024, 576, 1024], [1024, 0, 832, 1024, 192, 1024], [1024, 0, 0, 1024, 192, 192]], North: [[0, 192, 0, 1024, 576, 0], [832, 0, 832, 1024, 192, 832], [832, 0, 0, 1024, 192, 0]], South: [[0, 192, 1024, 1024, 576, 1024], [832, 0, 1024, 1024, 192, 1024], [832, 0, 192, 1024, 192, 192]]}
        if (block ~ ~ ~ #minecraft:beds[part=foot, facing=north]) data modify storage retina:data Surfaces set value {Top: [[0, 576, 0, 1024, 576, 1024], [832, 192, 832, 1024, 192, 1024], [0, 192, 832, 192, 192, 1024]], Bottom: [[0, 192, 0, 1024, 192, 1024], [832, 0, 832, 1024, 0, 1024], [0, 0, 832, 192, 0, 1024]], West: [[0, 192, 0, 0, 576, 1024], [832, 0, 832, 832, 192, 1024], [0, 0, 832, 0, 192, 1024]], East: [[1024, 192, 0, 1024, 576, 1024], [1024, 0, 832, 1024, 192, 1024], [192, 0, 832, 192, 192, 1024]], North: [[0, 192, 0, 1024, 576, 0], [832, 0, 832, 1024, 192, 832], [0, 0, 832, 192, 192, 832]], South: [[0, 192, 1024, 1024, 576, 1024], [832, 0, 1024, 1024, 192, 1024], [0, 0, 1024, 192, 192, 1024]]}

        if (block ~ ~ ~ #minecraft:beds[part=head, facing=east]) data modify storage retina:data Surfaces set value {Top: [[0, 576, 0, 1024, 576, 1024], [832, 192, 832, 1024, 192, 1024], [832, 192, 0, 1024, 192, 192]], Bottom: [[0, 192, 0, 1024, 192, 1024], [832, 0, 832, 1024, 0, 1024], [832, 0, 0, 1024, 0, 192]], West: [[0, 192, 0, 0, 576, 1024], [832, 0, 832, 832, 192, 1024], [832, 0, 0, 832, 192, 192]], East: [[1024, 192, 0, 1024, 576, 1024], [1024, 0, 832, 1024, 192, 1024], [1024, 0, 0, 1024, 192, 192]], North: [[0, 192, 0, 1024, 576, 0], [832, 0, 832, 1024, 192, 832], [832, 0, 0, 1024, 192, 0]], South: [[0, 192, 1024, 1024, 576, 1024], [832, 0, 1024, 1024, 192, 1024], [832, 0, 192, 1024, 192, 192]]}
        if (block ~ ~ ~ #minecraft:beds[part=head, facing=south]) data modify storage retina:data Surfaces set value {Top: [[0, 576, 0, 1024, 576, 1024], [832, 192, 832, 1024, 192, 1024], [0, 192, 832, 192, 192, 1024]], Bottom: [[0, 192, 0, 1024, 192, 1024], [832, 0, 832, 1024, 0, 1024], [0, 0, 832, 192, 0, 1024]], West: [[0, 192, 0, 0, 576, 1024], [832, 0, 832, 832, 192, 1024], [0, 0, 832, 0, 192, 1024]], East: [[1024, 192, 0, 1024, 576, 1024], [1024, 0, 832, 1024, 192, 1024], [192, 0, 832, 192, 192, 1024]], North: [[0, 192, 0, 1024, 576, 0], [832, 0, 832, 1024, 192, 832], [0, 0, 832, 192, 192, 832]], South: [[0, 192, 1024, 1024, 576, 1024], [832, 0, 1024, 1024, 192, 1024], [0, 0, 1024, 192, 192, 1024]]}
        if (block ~ ~ ~ #minecraft:beds[part=head, facing=west]) data modify storage retina:data Surfaces set value {Top: [[0, 576, 0, 1024, 576, 1024], [0, 192, 0, 192, 192, 192], [0, 192, 832, 192, 192, 1024]], Bottom: [[0, 192, 0, 1024, 192, 1024], [0, 0, 0, 192, 0, 192], [0, 0, 832, 192, 0, 1024]], West: [[0, 192, 0, 0, 576, 1024], [0, 0, 0, 0, 192, 192], [0, 0, 832, 0, 192, 1024]], East: [[1024, 192, 0, 1024, 576, 1024], [192, 0, 0, 192, 192, 192], [192, 0, 832, 192, 192, 1024]], North: [[0, 192, 0, 1024, 576, 0], [0, 0, 0, 192, 192, 0], [0, 0, 832, 192, 192, 832]], South: [[0, 192, 1024, 1024, 576, 1024], [0, 0, 192, 192, 192, 192], [0, 0, 1024, 192, 192, 1024]]}
        if (block ~ ~ ~ #minecraft:beds[part=head, facing=north]) data modify storage retina:data Surfaces set value {Top: [[0, 576, 0, 1024, 576, 1024], [832, 192, 0, 1024, 192, 192], [0, 192, 0, 192, 192, 192]], Bottom: [[0, 192, 0, 1024, 192, 1024], [832, 0, 0, 1024, 0, 192], [0, 0, 0, 192, 0, 192]], West: [[0, 192, 0, 0, 576, 1024], [832, 0, 0, 832, 192, 192], [0, 0, 0, 0, 192, 192]], East: [[1024, 192, 0, 1024, 576, 1024], [1024, 0, 0, 1024, 192, 192], [192, 0, 0, 192, 192, 192]], North: [[0, 192, 0, 1024, 576, 0], [832, 0, 0, 1024, 192, 0], [0, 0, 0, 192, 192, 0]], South: [[0, 192, 1024, 1024, 576, 1024], [832, 0, 192, 1024, 192, 192], [0, 0, 192, 192, 192, 192]]}
    }
    function bell() {
        // floor bell = single AABB
        if (block ~ ~ ~ #minecraft:bell[attachment=floor] && !block ~ ~ ~ #minecraft:bell[facing=north] && !block ~ ~ ~ #minecraft:bell[facing=south]) data modify storage retina:data Surfaces set value {Top: [[256, 1024, 0, 768, 1024, 1024]], Bottom: [[256, 0, 0, 768, 0, 1024]], West: [[256, 0, 0, 256, 1024, 1024]], East: [[768, 0, 0, 768, 1024, 1024]], North: [[256, 0, 0, 768, 1024, 0]], South: [[256, 0, 1024, 768, 1024, 1024]]}
        if (block ~ ~ ~ #minecraft:bell[attachment=floor] && !block ~ ~ ~ #minecraft:bell[facing=east] && !block ~ ~ ~ #minecraft:bell[facing=west]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 256, 1024, 1024, 768]], Bottom: [[0, 0, 256, 1024, 0, 768]], West: [[0, 0, 256, 0, 1024, 768]], East: [[1024, 0, 256, 1024, 1024, 768]], North: [[0, 0, 256, 1024, 1024, 256]], South: [[0, 0, 768, 1024, 1024, 768]]}
        if (block ~ ~ ~ #minecraft:bell[attachment=floor]) return 1;

        // otherwise, bell shape is two seperate cuboids
        data modify storage retina:data Surfaces set value {Top: [[320, 832, 320, 704, 832, 704], [256, 384, 256, 768, 384, 768]], Bottom: [[320, 384, 320, 704, 384, 704], [256, 256, 256, 768, 256, 768]], West: [[320, 384, 320, 320, 832, 704], [256, 256, 256, 256, 384, 768]], East: [[704, 384, 320, 704, 832, 704], [896, 256, 256, 768, 384, 768]], North: [[320, 384, 320, 704, 832, 320], [256, 256, 256, 768, 384, 256]], South: [[320, 384, 704, 704, 832, 704], [256, 256, 768, 768, 384, 768]]};
    }
    function berries() {
        if (block ~ ~ ~ #minecraft:sweet_berries[age=0]) data modify storage retina:data Surfaces set value {Top: [[192, 512, 192, 832, 512, 832]], Bottom: [[192, 0, 192, 832, 0, 832]], West: [[12, 0, 64, 64, 512, 832]], East: [[832, 0, 192, 832, 512, 832]], North: [[192, 0, 192, 832, 512, 192]], South: [[192, 0, 832, 832, 512, 832]]}
        if (block ~ ~ ~ #minecraft:sweet_berries[age=1]) hitbox.cactus_shaped();
        if (block ~ ~ ~ #minecraft:sweet_berries[age=2]) hitbox.cactus_shaped();
        if (block ~ ~ ~ #minecraft:sweet_berries[age=3]) hitbox.cubic();
    }
    function brewing_stand() {
        data modify storage retina:data Surfaces set value {Top: [[64, 128, 64, 960, 128, 960], [448, 896, 448, 576, 896, 576]], Bottom: [[64, 0, 64, 960, 0, 960], [448, 128, 448, 576, 128, 576]], West: [[64, 0, 64, 64, 128, 960], [448, 128, 448, 448, 896, 576]], East: [[960, 0, 64, 960, 128, 960], [576, 128, 448, 576, 896, 576]], North: [[64, 0, 64, 960, 128, 64], [448, 128, 448, 576, 896, 448]], South: [[64, 0, 960, 960, 128, 960], [448, 128, 576, 576, 896, 576]]};
    }
    function button() {
        // face=floor, powered=false
        if (block ~ ~ ~ #minecraft:buttons[face=floor, facing=west, powered=false]) data modify storage retina:data Surfaces set value {Top: [[384, 128, 320, 640, 128, 704]], Bottom: [[384, 0, 320, 640, 0, 704]], West: [[384, 0, 320, 384, 128, 704]], East: [[640, 0, 320, 640, 128, 704]], North: [[384, 0, 320, 640, 128, 320]], South: [[384, 0, 704, 640, 128, 704]]}
        if (block ~ ~ ~ #minecraft:buttons[face=floor, facing=east, powered=false]) data modify storage retina:data Surfaces set value {Top: [[384, 128, 320, 640, 128, 704]], Bottom: [[384, 0, 320, 640, 0, 704]], West: [[384, 0, 320, 384, 128, 704]], East: [[640, 0, 320, 640, 128, 704]], North: [[384, 0, 320, 640, 128, 320]], South: [[384, 0, 704, 640, 128, 704]]}
        if (block ~ ~ ~ #minecraft:buttons[face=floor, facing=south, powered=false]) data modify storage retina:data Surfaces set value {Top: [[320, 128, 384, 704, 128, 640]], Bottom: [[320, 0, 384, 704, 0, 640]], West: [[320, 0, 384, 320, 128, 640]], East: [[704, 0, 384, 704, 128, 640]], North: [[320, 0, 384, 704, 128, 384]], South: [[320, 0, 640, 704, 128, 640]]}
        if (block ~ ~ ~ #minecraft:buttons[face=floor, facing=north, powered=false]) data modify storage retina:data Surfaces set value {Top: [[320, 128, 384, 704, 128, 640]], Bottom: [[320, 0, 384, 704, 0, 640]], West: [[320, 0, 384, 320, 128, 640]], East: [[704, 0, 384, 704, 128, 640]], North: [[320, 0, 384, 704, 128, 384]], South: [[320, 0, 640, 704, 128, 640]]}

        // face=floor, powered=true
        if (block ~ ~ ~ #minecraft:buttons[face=floor, facing=west, powered=true]) data modify storage retina:data Surfaces set value {Top: [[384, 64, 320, 640, 64, 704]], Bottom: [[384, 0, 320, 640, 0, 704]], West: [[384, 0, 320, 384, 64, 704]], East: [[640, 0, 320, 640, 64, 704]], North: [[384, 0, 320, 640, 64, 320]], South: [[384, 0, 704, 640, 64, 704]]}
        if (block ~ ~ ~ #minecraft:buttons[face=floor, facing=east, powered=true]) data modify storage retina:data Surfaces set value {Top: [[384, 64, 320, 640, 64, 704]], Bottom: [[384, 0, 320, 640, 0, 704]], West: [[384, 0, 320, 384, 64, 704]], East: [[640, 0, 320, 640, 64, 704]], North: [[384, 0, 320, 640, 64, 320]], South: [[384, 0, 704, 640, 64, 704]]}
        if (block ~ ~ ~ #minecraft:buttons[face=floor, facing=south, powered=true]) data modify storage retina:data Surfaces set value {Top: [[320, 64, 384, 704, 64, 640]], Bottom: [[320, 0, 384, 704, 0, 640]], West: [[320, 0, 384, 320, 64, 640]], East: [[704, 0, 384, 704, 64, 640]], North: [[320, 0, 384, 704, 64, 384]], South: [[320, 0, 640, 704, 64, 640]]}
        if (block ~ ~ ~ #minecraft:buttons[face=floor, facing=north, powered=true]) data modify storage retina:data Surfaces set value {Top: [[320, 64, 384, 704, 64, 640]], Bottom: [[320, 0, 384, 704, 0, 640]], West: [[320, 0, 384, 320, 64, 640]], East: [[704, 0, 384, 704, 64, 640]], North: [[320, 0, 384, 704, 64, 384]], South: [[320, 0, 640, 704, 64, 640]]}

        // face=wall, powered=false
        if (block ~ ~ ~ #minecraft:buttons[face=wall, facing=north, powered=false]) data modify storage retina:data Surfaces set value {Top: [[320, 640, 896, 704, 640, 1024]], Bottom: [[320, 384, 896, 704, 384, 1024]], West: [[320, 384, 896, 320, 640, 1024]], East: [[704, 384, 896, 704, 640, 1024]], North: [[320, 384, 896, 704, 640, 896]], South: [[320, 384, 1024, 704, 640, 1024]]}
        if (block ~ ~ ~ #minecraft:buttons[face=wall, facing=south, powered=false]) data modify storage retina:data Surfaces set value {Top: [[320, 640, 0, 704, 640, 128]], Bottom: [[320, 384, 0, 704, 384, 128]], West: [[320, 384, 0, 320, 640, 128]], East: [[704, 384, 0, 704, 640, 128]], North: [[320, 384, 0, 704, 640, 0]], South: [[320, 384, 128, 704, 640, 128]]}
        if (block ~ ~ ~ #minecraft:buttons[face=wall, facing=west, powered=false]) data modify storage retina:data Surfaces set value {Top: [[896, 640, 320, 1024, 640, 704]], Bottom: [[896, 384, 320, 1024, 384, 704]], West: [[896, 384, 320, 896, 640, 704]], East: [[1024, 384, 320, 1024, 640, 704]], North: [[896, 384, 320, 1024, 640, 320]], South: [[896, 384, 704, 1024, 640, 704]]}
        if (block ~ ~ ~ #minecraft:buttons[face=wall, facing=east, powered=false]) data modify storage retina:data Surfaces set value {Top: [[0, 640, 320, 128, 640, 704]], Bottom: [[0, 384, 320, 128, 384, 704]], West: [[0, 384, 320, 0, 640, 704]], East: [[128, 384, 320, 128, 640, 704]], North: [[0, 384, 320, 128, 640, 320]], South: [[0, 384, 704, 128, 640, 704]]}

        // face=wall, powered=true
        if (block ~ ~ ~ #minecraft:buttons[face=wall, facing=north, powered=true]) data modify storage retina:data Surfaces set value {Top: [[320, 640, 960, 704, 640, 1024]], Bottom: [[320, 384, 960, 704, 384, 1024]], West: [[320, 384, 960, 320, 640, 1024]], East: [[704, 384, 960, 704, 640, 1024]], North: [[320, 384, 960, 704, 640, 960]], South: [[320, 384, 1024, 704, 640, 1024]]}
        if (block ~ ~ ~ #minecraft:buttons[face=wall, facing=south, powered=true]) data modify storage retina:data Surfaces set value {Top: [[320, 640, 0, 704, 640, 64]], Bottom: [[320, 384, 0, 704, 384, 64]], West: [[320, 384, 0, 320, 640, 64]], East: [[704, 384, 0, 704, 640, 64]], North: [[320, 384, 0, 704, 640, 0]], South: [[320, 384, 64, 704, 640, 64]]}
        if (block ~ ~ ~ #minecraft:buttons[face=wall, facing=west, powered=true]) data modify storage retina:data Surfaces set value {Top: [[960, 640, 320, 1024, 640, 704]], Bottom: [[960, 384, 320, 1024, 384, 704]], West: [[960, 384, 320, 960, 640, 704]], East: [[1024, 384, 320, 1024, 640, 704]], North: [[960, 384, 320, 1024, 640, 320]], South: [[960, 384, 704, 1024, 640, 704]]}
        if (block ~ ~ ~ #minecraft:buttons[face=wall, facing=east, powered=true]) data modify storage retina:data Surfaces set value {Top: [[0, 640, 320, 64, 640, 704]], Bottom: [[0, 384, 320, 64, 384, 704]], West: [[0, 384, 320, 0, 640, 704]], East: [[64, 384, 320, 64, 640, 704]], North: [[0, 384, 320, 64, 640, 320]], South: [[0, 384, 704, 64, 640, 704]]}

        // face=ceiling, powered=false
        if (block ~ ~ ~ #minecraft:buttons[face=ceiling, facing=west, powered=false]) data modify storage retina:data Surfaces set value {Top: [[384, 1024, 320, 640, 1024, 704]], Bottom: [[384, 896, 320, 640, 896, 704]], West: [[384, 896, 320, 384, 1024, 704]], East: [[640, 896, 320, 640, 1024, 704]], North: [[384, 896, 320, 640, 1024, 320]], South: [[384, 896, 704, 640, 1024, 704]]}
        if (block ~ ~ ~ #minecraft:buttons[face=ceiling, facing=east, powered=false]) data modify storage retina:data Surfaces set value {Top: [[384, 1024, 320, 640, 1024, 704]], Bottom: [[384, 896, 320, 640, 896, 704]], West: [[384, 896, 320, 384, 1024, 704]], East: [[640, 896, 320, 640, 1024, 704]], North: [[384, 896, 320, 640, 1024, 320]], South: [[384, 896, 704, 640, 1024, 704]]}
        if (block ~ ~ ~ #minecraft:buttons[face=ceiling, facing=north, powered=false]) data modify storage retina:data Surfaces set value {Top: [[320, 1024, 384, 704, 1024, 640]], Bottom: [[320, 896, 384, 704, 896, 640]], West: [[320, 896, 384, 320, 1024, 640]], East: [[704, 896, 384, 704, 1024, 640]], North: [[320, 896, 384, 704, 1024, 384]], South: [[320, 896, 640, 704, 1024, 640]]}
        if (block ~ ~ ~ #minecraft:buttons[face=ceiling, facing=south, powered=false]) data modify storage retina:data Surfaces set value {Top: [[320, 1024, 384, 704, 1024, 640]], Bottom: [[320, 896, 384, 704, 896, 640]], West: [[320, 896, 384, 320, 1024, 640]], East: [[704, 896, 384, 704, 1024, 640]], North: [[320, 896, 384, 704, 1024, 384]], South: [[320, 896, 640, 704, 1024, 640]]}

        // face=ceiling, powered=true
        if (block ~ ~ ~ #minecraft:buttons[face=ceiling, facing=west, powered=true]) data modify storage retina:data Surfaces set value {Top: [[384, 1024, 320, 640, 1024, 704]], Bottom: [[384, 960, 320, 640, 960, 704]], West: [[384, 960, 320, 384, 1024, 704]], East: [[640, 960, 320, 640, 1024, 704]], North: [[384, 960, 320, 640, 1024, 320]], South: [[384, 960, 704, 640, 1024, 704]]}
        if (block ~ ~ ~ #minecraft:buttons[face=ceiling, facing=east, powered=true]) data modify storage retina:data Surfaces set value {Top: [[384, 1024, 320, 640, 1024, 704]], Bottom: [[384, 960, 320, 640, 960, 704]], West: [[384, 960, 320, 384, 1024, 704]], East: [[640, 960, 320, 640, 1024, 704]], North: [[384, 960, 320, 640, 1024, 320]], South: [[384, 960, 704, 640, 1024, 704]]}
        if (block ~ ~ ~ #minecraft:buttons[face=ceiling, facing=north, powered=true]) data modify storage retina:data Surfaces set value {Top: [[320, 1024, 384, 704, 1024, 640]], Bottom: [[320, 960, 384, 704, 960, 640]], West: [[320, 960, 384, 320, 1024, 640]], East: [[704, 960, 384, 704, 1024, 640]], North: [[320, 960, 384, 704, 1024, 384]], South: [[320, 960, 640, 704, 1024, 640]]}
        if (block ~ ~ ~ #minecraft:buttons[face=ceiling, facing=south, powered=true]) data modify storage retina:data Surfaces set value {Top: [[320, 1024, 384, 704, 1024, 640]], Bottom: [[320, 960, 384, 704, 960, 640]], West: [[320, 960, 384, 320, 1024, 640]], East: [[704, 960, 384, 704, 1024, 640]], North: [[320, 960, 384, 704, 1024, 384]], South: [[320, 960, 640, 704, 1024, 640]]}
    }
    function cactus_shaped() {
        data modify storage retina:data Surfaces set value {Top: [[64, 1024, 64, 960, 1024, 960]], Bottom: [[64, 0, 64, 960, 0, 960]], West: [[64, 0, 64, 64, 1024, 960]], East: [[960, 0, 64, 960, 1024, 960]], North: [[64, 0, 64, 960, 1024, 64]], South: [[64, 0, 960, 960, 1024, 960]]};
    }
    function cake() {
        if (block ~ ~ ~ minecraft:cake[bites=0]) data modify storage retina:data Surfaces set value {Top: [[64, 512, 64, 960, 512, 960]], Bottom: [[64, 0, 64, 960, 0, 960]], West: [[64, 0, 64, 64, 512, 960]], East: [[960, 0, 64, 960, 512, 960]], North: [[64, 0, 64, 960, 512, 64]], South: [[64, 0, 960, 960, 512, 960]]}
        if (block ~ ~ ~ minecraft:cake[bites=1]) data modify storage retina:data Surfaces set value {Top: [[192, 512, 64, 960, 512, 960]], Bottom: [[192, 0, 64, 960, 0, 960]], West: [[192, 0, 64, 192, 512, 960]], East: [[960, 0, 64, 960, 512, 960]], North: [[192, 0, 64, 960, 512, 64]], South: [[192, 0, 960, 960, 512, 960]]}
        if (block ~ ~ ~ minecraft:cake[bites=2]) data modify storage retina:data Surfaces set value {Top: [[320, 512, 64, 960, 512, 960]], Bottom: [[320, 0, 64, 960, 0, 960]], West: [[320, 0, 64, 320, 512, 960]], East: [[960, 0, 64, 960, 512, 960]], North: [[320, 0, 64, 960, 512, 64]], South: [[320, 0, 960, 960, 512, 960]]}
        if (block ~ ~ ~ minecraft:cake[bites=3]) data modify storage retina:data Surfaces set value {Top: [[448, 512, 64, 960, 512, 960]], Bottom: [[448, 0, 64, 960, 0, 960]], West: [[448, 0, 64, 448, 512, 960]], East: [[960, 0, 64, 960, 512, 960]], North: [[448, 0, 64, 960, 512, 64]], South: [[448, 0, 960, 960, 512, 960]]}
        if (block ~ ~ ~ minecraft:cake[bites=4]) data modify storage retina:data Surfaces set value {Top: [[576, 512, 64, 960, 512, 960]], Bottom: [[576, 0, 64, 960, 0, 960]], West: [[576, 0, 64, 576, 512, 960]], East: [[960, 0, 64, 960, 512, 960]], North: [[576, 0, 64, 960, 512, 64]], South: [[576, 0, 960, 960, 512, 960]]}
        if (block ~ ~ ~ minecraft:cake[bites=5]) data modify storage retina:data Surfaces set value {Top: [[704, 512, 64, 960, 512, 960]], Bottom: [[704, 0, 64, 960, 0, 960]], West: [[704, 0, 64, 704, 512, 960]], East: [[960, 0, 64, 960, 512, 960]], North: [[704, 0, 64, 960, 512, 64]], South: [[704, 0, 960, 960, 512, 960]]}
        if (block ~ ~ ~ minecraft:cake[bites=6]) data modify storage retina:data Surfaces set value {Top: [[832, 512, 64, 960, 512, 960]], Bottom: [[832, 0, 64, 960, 0, 960]], West: [[832, 0, 64, 832, 512, 960]], East: [[960, 0, 64, 960, 512, 960]], North: [[832, 0, 64, 960, 512, 64]], South: [[832, 0, 960, 960, 512, 960]]}
    }
    function campfire() {
        data modify storage retina:data Surfaces set value {Top: [[0, 448, 0, 1024, 448, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 448, 1024]], East: [[1024, 0, 0, 1024, 448, 1024]], North: [[0, 0, 0, 1024, 448, 0]], South: [[0, 0, 1024, 1024, 448, 1024]]};
    }
    function carpet() {
        data modify storage retina:data Surfaces set value {Top: [[0, 64, 0, 1024, 64, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 64, 1024]], East: [[1024, 0, 0, 1024, 64, 1024]], North: [[0, 0, 0, 1024, 64, 0]], South: [[0, 0, 1024, 1024, 64, 1024]]};
    }
    function cauldron() {
        data modify storage retina:data Surfaces set value {Top: [[0, 256, 0, 1024, 256, 1024], [0, 192, 0, 256, 192, 256], [0, 192, 768, 256, 192, 1024], [768, 192, 0, 1024, 192, 256], [768, 192, 768, 1024, 192, 1024], [0, 1024, 0, 896, 1024, 128], [128, 1024, 896, 1024, 1024, 1024], [0, 1024, 128, 128, 1024, 1024], [896, 1024, 0, 1024, 1024, 896]], Bottom: [[0, 192, 0, 1024, 192, 1024], [0, 0, 0, 256, 0, 256], [0, 0, 768, 256, 0, 1024], [768, 0, 0, 1024, 0, 256], [768, 0, 768, 1024, 0, 1024], [0, 256, 0, 896, 256, 128], [128, 256, 896, 1024, 256, 1024], [0, 256, 128, 128, 256, 1024], [896, 256, 0, 1024, 256, 896]], West: [[0, 192, 0, 0, 256, 1024], [0, 0, 0, 0, 192, 256], [0, 0, 768, 0, 192, 1024], [768, 0, 0, 768, 192, 256], [768, 0, 768, 768, 192, 1024], [0, 256, 0, 0, 1024, 128], [128, 256, 896, 128, 1024, 1024], [0, 256, 128, 0, 1024, 1024], [896, 256, 0, 896, 1024, 896]], East: [[1024, 192, 0, 1024, 256, 1024], [256, 0, 0, 256, 192, 256], [256, 0, 768, 256, 192, 1024], [1024, 0, 0, 1024, 192, 256], [1024, 0, 768, 1024, 192, 1024], [896, 256, 0, 896, 1024, 128], [1024, 256, 896, 1024, 1024, 1024], [128, 256, 128, 128, 1024, 1024], [1024, 256, 0, 1024, 1024, 896]], North: [[0, 192, 0, 1024, 256, 0], [0, 0, 0, 256, 192, 0], [0, 0, 768, 256, 192, 768], [768, 0, 0, 1024, 192, 0], [768, 0, 768, 1024, 192, 768], [0, 256, 0, 896, 1024, 0], [128, 256, 896, 1024, 1024, 896], [0, 256, 128, 128, 1024, 128], [896, 256, 0, 1024, 1024, 0]], South: [[0, 192, 1024, 1024, 256, 1024], [0, 0, 256, 256, 192, 256], [0, 0, 1024, 256, 192, 1024], [768, 0, 256, 1024, 192, 256], [768, 0, 1024, 1024, 192, 1024], [0, 256, 128, 896, 1024, 128], [128, 256, 1024, 1024, 1024, 1024], [0, 256, 1024, 128, 1024, 1024], [896, 256, 896, 1024, 1024, 896]]};
    }
    function chain() {
        if (block ~ ~ ~ minecraft:chain[axis=x]) data modify storage retina:data Surfaces set value {Top: [[0, 608, 416, 1024, 608, 608]], Bottom: [[0, 416, 416, 1024, 416, 608]], West: [[0, 416, 416, 0, 608, 608]], East: [[1024, 416, 416, 1024, 608, 608]], North: [[0, 416, 416, 1024, 608, 416]], South: [[0, 416, 608, 1024, 608, 608]]}
        if (block ~ ~ ~ minecraft:chain[axis=y]) data modify storage retina:data Surfaces set value {Top: [[416, 1024, 416, 608, 1024, 608]], Bottom: [[416, 0, 416, 608, 0, 608]], West: [[416, 0, 416, 416, 1024, 608]], East: [[608, 0, 416, 608, 1024, 608]], North: [[416, 0, 416, 608, 1024, 416]], South: [[416, 0, 608, 608, 1024, 608]]}
        if (block ~ ~ ~ minecraft:chain[axis=z]) data modify storage retina:data Surfaces set value {Top: [[416, 608, 0, 608, 608, 1024]], Bottom: [[416, 416, 0, 608, 416, 1024]], West: [[416, 416, 0, 416, 608, 1024]], East: [[608, 416, 0, 608, 608, 1024]], North: [[416, 416, 0, 608, 608, 0]], South: [[416, 416, 1024, 608, 608, 1024]]}
    }
    function chest() {
        data modify storage retina:data Surfaces set value {Top: [[64, 896, 64, 960, 896, 960]], Bottom: [[64, 0, 64, 960, 0, 960]], West: [[64, 0, 64, 64, 896, 960]], East: [[960, 0, 64, 960, 896, 960]], North: [[64, 0, 64, 960, 896, 64]], South: [[64, 0, 960, 960, 896, 960]]};
    }
    function composter() {
        data modify storage retina:data Surfaces set value {Top: [[0, 128, 0, 1024, 128, 1024], [0, 1024, 0, 896, 1024, 128], [128, 1024, 896, 1024, 1024, 1024], [0, 1024, 128, 128, 1024, 1024], [896, 1024, 0, 1024, 1024, 896]], Bottom: [[0, 0, 0, 1024, 0, 1024], [0, 128, 0, 896, 128, 128], [128, 128, 896, 1024, 128, 1024], [0, 128, 128, 128, 128, 1024], [896, 128, 0, 1024, 128, 896]], West: [[0, 0, 0, 0, 128, 1024], [0, 128, 0, 0, 1024, 128], [128, 128, 896, 128, 1024, 1024], [0, 128, 128, 0, 1024, 1024], [896, 128, 0, 896, 1024, 896]], East: [[1024, 0, 0, 1024, 128, 1024], [896, 128, 0, 896, 1024, 128], [1024, 128, 896, 1024, 1024, 1024], [128, 128, 128, 128, 1024, 1024], [1024, 128, 0, 1024, 1024, 896]], North: [[0, 0, 0, 1024, 128, 0], [0, 128, 0, 896, 1024, 0], [128, 128, 896, 1024, 1024, 896], [0, 128, 128, 128, 1024, 128], [896, 128, 0, 1024, 1024, 0]], South: [[0, 0, 1024, 1024, 128, 1024], [0, 128, 128, 896, 1024, 128], [128, 128, 1024, 1024, 1024, 1024], [0, 128, 1024, 128, 1024, 1024], [896, 128, 896, 1024, 1024, 896]]};
    }
    function conduit() {
        data modify storage retina:data Surfaces set value {Top: [[320, 704, 320, 704, 704, 704]], Bottom: [[320, 320, 320, 704, 320, 704]], West: [[320, 320, 320, 320, 704, 704]], East: [[704, 320, 320, 704, 704, 704]], North: [[320, 320, 320, 704, 704, 320]], South: [[320, 320, 704, 704, 704, 704]]};
    }
    function coral_fan() {
        data modify storage retina:data Surfaces set value {Top: [[128, 256, 128, 896, 256, 896]], Bottom: [[128, 0, 128, 896, 0, 896]], West: [[12, 0, 64, 64, 256, 896]], East: [[896, 0, 128, 896, 256, 896]], North: [[128, 0, 128, 896, 256, 128]], South: [[128, 0, 896, 896, 256, 896]]};
    }
    function coral_plant() {
        data modify storage retina:data Surfaces set value {Top: [[128, 960, 128, 896, 960, 896]], Bottom: [[128, 0, 128, 896, 0, 896]], West: [[12, 0, 64, 64, 960, 896]], East: [[896, 0, 128, 896, 960, 896]], North: [[128, 0, 128, 896, 960, 128]], South: [[128, 0, 896, 896, 960, 896]]};
    }
    function daylight_detector() {
        data modify storage retina:data Surfaces set value {Top: [[0, 384, 0, 1024, 384,  1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 384, 1024]], East: [[1024, 0, 0, 1024, 384, 1024]], North: [[0, 0, 0, 1024, 384, 0]], South: [[0, 0, 1024, 1024, 384, 1024]]};
    }
    function door() {
        // open=false
        if (block ~ ~ ~ #minecraft:doors[facing=east, open=false]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 192, 1024, 1024]], Bottom: [[0, 0, 0, 192, 0, 1024]], West: [[0, 0, 0, 0, 1024, 1024]], East: [[192, 0, 0, 192, 1024, 1024]], North: [[0, 0, 0, 192, 1024, 0]], South: [[0, 0, 1024, 192, 1024, 1024]]}
        if (block ~ ~ ~ #minecraft:doors[facing=west, open=false]) data modify storage retina:data Surfaces set value {Top: [[832, 1024, 0, 1024, 1024, 1024]], Bottom: [[832, 0, 0, 1024, 0, 1024]], West: [[832, 0, 0, 832, 1024, 1024]], East: [[1024, 0, 0, 1024, 1024, 1024]], North: [[832, 0, 0, 1024, 1024, 0]], South: [[832, 0, 1024, 1024, 1024, 1024]]}
        if (block ~ ~ ~ #minecraft:doors[facing=north, open=false]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 832, 1024, 1024, 1024]], Bottom: [[0, 0, 832, 1024, 0, 1024]], West: [[0, 0, 832, 0, 1024, 1024]], East: [[1024, 0, 832, 1024, 1024, 1024]], North: [[0, 0, 832, 1024, 1024, 832]], South: [[0, 0, 1024, 1024, 1024, 1024]]}
        if (block ~ ~ ~ #minecraft:doors[facing=south, open=false]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 192]], Bottom: [[0, 0, 0, 1024, 0, 192]], West: [[0, 0, 0, 0, 1024, 192]], East: [[1024, 0, 0, 1024, 1024, 192]], North: [[0, 0, 0, 1024, 1024, 0]], South: [[0, 0, 192, 1024, 1024, 192]]}

        // open=true, hinge=left
        if (block ~ ~ ~ #minecraft:doors[facing=east, open=true, hinge=left]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 192]], Bottom: [[0, 0, 0, 1024, 0, 192]], West: [[0, 0, 0, 0, 1024, 192]], East: [[1024, 0, 0, 1024, 1024, 192]], North: [[0, 0, 0, 1024, 1024, 0]], South: [[0, 0, 192, 1024, 1024, 192]]}
        if (block ~ ~ ~ #minecraft:doors[facing=west, open=true, hinge=left]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 832, 1024, 1024, 1024]], Bottom: [[0, 0, 832, 1024, 0, 1024]], West: [[0, 0, 832, 0, 1024, 1024]], East: [[1024, 0, 832, 1024, 1024, 1024]], North: [[0, 0, 832, 1024, 1024, 832]], South: [[0, 0, 1024, 1024, 1024, 1024]]}
        if (block ~ ~ ~ #minecraft:doors[facing=north, open=true, hinge=left]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 192, 1024, 1024]], Bottom: [[0, 0, 0, 192, 0, 1024]], West: [[0, 0, 0, 0, 1024, 1024]], East: [[192, 0, 0, 192, 1024, 1024]], North: [[0, 0, 0, 192, 1024, 0]], South: [[0, 0, 1024, 192, 1024, 1024]]}
        if (block ~ ~ ~ #minecraft:doors[facing=south, open=true, hinge=left]) data modify storage retina:data Surfaces set value {Top: [[832, 1024, 0, 1024, 1024, 1024]], Bottom: [[832, 0, 0, 1024, 0, 1024]], West: [[832, 0, 0, 832, 1024, 1024]], East: [[1024, 0, 0, 1024, 1024, 1024]], North: [[832, 0, 0, 1024, 1024, 0]], South: [[832, 0, 1024, 1024, 1024, 1024]]}

        // open=true, hinge=right
        if (block ~ ~ ~ #minecraft:doors[facing=east, open=true, hinge=right]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 832, 1024, 1024, 1024]], Bottom: [[0, 0, 832, 1024, 0, 1024]], West: [[0, 0, 832, 0, 1024, 1024]], East: [[1024, 0, 832, 1024, 1024, 1024]], North: [[0, 0, 832, 1024, 1024, 832]], South: [[0, 0, 1024, 1024, 1024, 1024]]}
        if (block ~ ~ ~ #minecraft:doors[facing=west, open=true, hinge=right]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 192]], Bottom: [[0, 0, 0, 1024, 0, 192]], West: [[0, 0, 0, 0, 1024, 192]], East: [[1024, 0, 0, 1024, 1024, 192]], North: [[0, 0, 0, 1024, 1024, 0]], South: [[0, 0, 192, 1024, 1024, 192]]}
        if (block ~ ~ ~ #minecraft:doors[facing=north, open=true, hinge=right]) data modify storage retina:data Surfaces set value {Top: [[832, 1024, 0, 1024, 1024, 1024]], Bottom: [[832, 0, 0, 1024, 0, 1024]], West: [[832, 0, 0, 832, 1024, 1024]], East: [[1024, 0, 0, 1024, 1024, 1024]], North: [[832, 0, 0, 1024, 1024, 0]], South: [[832, 0, 1024, 1024, 1024, 1024]]}
        if (block ~ ~ ~ #minecraft:doors[facing=south, open=true, hinge=right]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 192, 1024, 1024]], Bottom: [[0, 0, 0, 192, 0, 1024]], West: [[0, 0, 0, 0, 1024, 1024]], East: [[192, 0, 0, 192, 1024, 1024]], North: [[0, 0, 0, 192, 1024, 0]], South: [[0, 0, 1024, 192, 1024, 1024]]}
    }
    function end_portal_frame() {
        data modify storage retina:data Surfaces set value {Top: [[0, 832, 0, 1024, 832, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 832, 1024]], East: [[1024, 0, 0, 1024, 832, 1024]], North: [[0, 0, 0, 1024, 832, 0]], South: [[0, 0, 1024, 1024, 832, 1024]]};
    }
    function farmland_shaped() {
        data modify storage retina:data Surfaces set value {Top: [[0, 960, 0, 1024, 960, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 960, 1024]], East: [[1024, 0, 0, 1024, 960, 1024]], North: [[0, 0, 0, 1024, 960, 0]], South: [[0, 0, 1024, 1024, 960, 1024]]};
    }
    function fence_gate() {
        // in_wall=false
        if (block ~ ~ ~ #minecraft:fence_gates[facing=east, in_wall=false]) data modify storage retina:data Surfaces set value {Top: [[384, 1024, 0, 640, 1024, 1024]], Bottom: [[384, 0, 0, 640, 0, 1024]], West: [[384, 0, 0, 384, 1024, 1024]], East: [[640, 0, 0, 640, 1024, 1024]], North: [[384, 0, 0, 640, 1024, 0]], South: [[384, 0, 1024, 640, 1024, 1024]]}
        if (block ~ ~ ~ #minecraft:fence_gates[facing=west, in_wall=false]) data modify storage retina:data Surfaces set value {Top: [[384, 1024, 0, 640, 1024, 1024]], Bottom: [[384, 0, 0, 640, 0, 1024]], West: [[384, 0, 0, 384, 1024, 1024]], East: [[640, 0, 0, 640, 1024, 1024]], North: [[384, 0, 0, 640, 1024, 0]], South: [[384, 0, 1024, 640, 1024, 1024]]}
        if (block ~ ~ ~ #minecraft:fence_gates[facing=north, in_wall=false]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 384, 1024, 1024, 640]], Bottom: [[0, 0, 384, 1024, 0, 640]], West: [[0, 0, 384, 0, 1024, 640]], East: [[1024, 0, 384, 1024, 1024, 640]], North: [[0, 0, 384, 1024, 1024, 384]], South: [[0, 0, 640, 1024, 1024, 640]]}
        if (block ~ ~ ~ #minecraft:fence_gates[facing=south, in_wall=false]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 384, 1024, 1024, 640]], Bottom: [[0, 0, 384, 1024, 0, 640]], West: [[0, 0, 384, 0, 1024, 640]], East: [[1024, 0, 384, 1024, 1024, 640]], North: [[0, 0, 384, 1024, 1024, 384]], South: [[0, 0, 640, 1024, 1024, 640]]}

        // in_wall=true
        if (block ~ ~ ~ #minecraft:fence_gates[facing=east, in_wall=true]) data modify storage retina:data Surfaces set value {Top: [[384, 832, 0, 640, 832, 1024]], Bottom: [[384, 0, 0, 640, 0, 1024]], West: [[384, 0, 0, 384, 832, 1024]], East: [[640, 0, 0, 640, 832, 1024]], North: [[384, 0, 0, 640, 832, 0]], South: [[384, 0, 1024, 640, 832, 1024]]}
        if (block ~ ~ ~ #minecraft:fence_gates[facing=west, in_wall=true]) data modify storage retina:data Surfaces set value {Top: [[384, 832, 0, 640, 832, 1024]], Bottom: [[384, 0, 0, 640, 0, 1024]], West: [[384, 0, 0, 384, 832, 1024]], East: [[640, 0, 0, 640, 832, 1024]], North: [[384, 0, 0, 640, 832, 0]], South: [[384, 0, 1024, 640, 832, 1024]]}
        if (block ~ ~ ~ #minecraft:fence_gates[facing=north, in_wall=true]) data modify storage retina:data Surfaces set value {Top: [[0, 832, 384, 1024, 832, 640]], Bottom: [[0, 0, 384, 1024, 0, 640]], West: [[0, 0, 384, 0, 832, 640]], East: [[1024, 0, 384, 1024, 832, 640]], North: [[0, 0, 384, 1024, 832, 384]], South: [[0, 0, 640, 1024, 832, 640]]}
        if (block ~ ~ ~ #minecraft:fence_gates[facing=south, in_wall=true]) data modify storage retina:data Surfaces set value {Top: [[0, 832, 384, 1024, 832, 640]], Bottom: [[0, 0, 384, 1024, 0, 640]], West: [[0, 0, 384, 0, 832, 640]], East: [[1024, 0, 384, 1024, 832, 640]], North: [[0, 0, 384, 1024, 832, 384]], South: [[0, 0, 640, 1024, 832, 640]]}
    }
    function fence() {
        data modify storage retina:data Surfaces set value {Top: [[384, 1024, 384, 640, 1024, 640]], Bottom: [[384, 0, 384, 640, 0, 640]], West: [[384, 0, 384, 384, 1024, 640]], East: [[640, 0, 384, 640, 1024, 640]], North: [[384, 0, 384, 640, 1024, 384]], South: [[384, 0, 640, 640, 1024, 640]]};

        if (block ~ ~ ~ #minecraft:fences[east=true]) data modify storage retina:data Surfaces.Top append value [640, 1024, 384, 1024, 1024, 640];
        if (block ~ ~ ~ #minecraft:fences[east=true]) data modify storage retina:data Surfaces.Bottom append value [640, 0, 384, 1024, 0, 640];
        if (block ~ ~ ~ #minecraft:fences[east=true]) data modify storage retina:data Surfaces.West append value [640, 0, 384, 640, 1024, 640];
        if (block ~ ~ ~ #minecraft:fences[east=true]) data modify storage retina:data Surfaces.East append value [1024, 0, 384, 1024, 1024, 640];
        if (block ~ ~ ~ #minecraft:fences[east=true]) data modify storage retina:data Surfaces.North append value [640, 0, 384, 1024, 1024, 384];
        if (block ~ ~ ~ #minecraft:fences[east=true]) data modify storage retina:data Surfaces.South append value [640, 0, 640, 1024, 1024, 640];

        if (block ~ ~ ~ #minecraft:fences[west=true]) data modify storage retina:data Surfaces.Top append value [0, 1024, 384, 384, 1024, 640];
        if (block ~ ~ ~ #minecraft:fences[west=true]) data modify storage retina:data Surfaces.Bottom append value [0, 0, 384, 384, 0, 640];
        if (block ~ ~ ~ #minecraft:fences[west=true]) data modify storage retina:data Surfaces.West append value [0, 0, 384, 0, 1024, 640];
        if (block ~ ~ ~ #minecraft:fences[west=true]) data modify storage retina:data Surfaces.East append value [384, 0, 384, 384, 1024, 640];
        if (block ~ ~ ~ #minecraft:fences[west=true]) data modify storage retina:data Surfaces.North append value [0, 0, 384, 384, 1024, 384];
        if (block ~ ~ ~ #minecraft:fences[west=true]) data modify storage retina:data Surfaces.South append value [0, 0, 640, 384, 1024, 640];

        if (block ~ ~ ~ #minecraft:fences[south=true]) data modify storage retina:data Surfaces.Top append value [384, 1024, 640, 640, 1024, 1024];
        if (block ~ ~ ~ #minecraft:fences[south=true]) data modify storage retina:data Surfaces.Bottom append value [384, 0, 640, 640, 0, 1024];
        if (block ~ ~ ~ #minecraft:fences[south=true]) data modify storage retina:data Surfaces.West append value [384, 0, 640, 384, 1024, 1024];
        if (block ~ ~ ~ #minecraft:fences[south=true]) data modify storage retina:data Surfaces.East append value [640, 0, 640, 640, 1024, 1024];
        if (block ~ ~ ~ #minecraft:fences[south=true]) data modify storage retina:data Surfaces.North append value [384, 0, 640, 640, 1024, 640];
        if (block ~ ~ ~ #minecraft:fences[south=true]) data modify storage retina:data Surfaces.South append value [384, 0, 1024, 640, 1024, 1024];

        if (block ~ ~ ~ #minecraft:fences[north=true]) data modify storage retina:data Surfaces.Top append value [384, 1024, 0, 640, 1024, 384];
        if (block ~ ~ ~ #minecraft:fences[north=true]) data modify storage retina:data Surfaces.Bottom append value [384, 0, 0, 640, 0, 384];
        if (block ~ ~ ~ #minecraft:fences[north=true]) data modify storage retina:data Surfaces.West append value [384, 0, 0, 384, 1024, 384];
        if (block ~ ~ ~ #minecraft:fences[north=true]) data modify storage retina:data Surfaces.East append value [640, 0, 0, 640, 1024, 384];
        if (block ~ ~ ~ #minecraft:fences[north=true]) data modify storage retina:data Surfaces.North append value [384, 0, 0, 640, 1024, 0];
        if (block ~ ~ ~ #minecraft:fences[north=true]) data modify storage retina:data Surfaces.South append value [384, 0, 384, 640, 1024, 384];
    }
    function fire() {
        hitbox.carpet();
    }
    function grass_shaped() {
        data modify storage retina:data Surfaces set value {Top: [[128, 832, 128, 896, 832, 896]], Bottom: [[128, 0, 128, 896, 0, 896]], West: [[128, 0, 128, 128, 832, 896]], East: [[896, 0, 128, 896, 832, 896]], North: [[128, 0, 128, 896, 832, 128]], South: [[128, 0, 896, 896, 832, 896]]};
    }
    function hanging_roots() {
        data modify storage retina:data Surfaces set value {Top: [[128, 1024, 128, 896, 1024, 896]], Bottom: [[128, 640, 128, 896, 640, 896]], West: [[128, 640, 128, 128, 1024, 896]], East: [[896, 640, 128, 896, 1024, 896]], North: [[128, 640, 128, 896, 1024, 128]], South: [[128, 640, 896, 896, 1024, 896]]};
    }
    function head() {
        data modify storage retina:data Surfaces set value {Top: [[256, 512, 256, 768, 512, 768]], Bottom: [[256, 0, 256, 768, 0, 768]], West: [[12, 0, 64, 64, 512, 768]], East: [[768, 0, 256, 768, 512, 768]], North: [[256, 0, 256, 768, 512, 256]], South: [[256, 0, 768, 768, 512, 768]]};
    }
    function hopper() {
        data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 1024]], Bottom: [[0, 640, 0, 1024, 640, 1024], [256, 256, 256, 768, 256, 768]], West: [[0, 640, 0, 0, 1024, 1024], [256, 256, 256, 256, 640, 768]], East: [[1024, 640, 0, 1024, 1024, 1024], [768, 256, 256, 768, 640, 768]], North: [[0, 640, 0, 1024, 1024, 0], [256, 256, 256, 768, 640, 256]], South: [[0, 640, 1024, 1024, 1024, 1024], [256, 256, 768, 768, 640, 768]]};

        if (block ~ ~ ~ minecraft:hopper[facing=east]) {
            data modify storage retina:data Surfaces.Top append value [768, 640, 384, 1024, 640, 640]; 
            data modify storage retina:data Surfaces.Bottom append value [768, 256, 384, 1024, 256, 640];
            data modify storage retina:data Surfaces.West append value [768, 256, 384, 768, 640, 640];
            data modify storage retina:data Surfaces.East append value [1024, 256, 384, 1024, 640, 640];
            data modify storage retina:data Surfaces.North append value [768, 256, 384, 1024, 640, 384];
            data modify storage retina:data Surfaces.South append value [768, 256, 640, 1024, 640, 640];
        }
        if (block ~ ~ ~ minecraft:hopper[facing=west]) {
            data modify storage retina:data Surfaces.Top append value [0, 640, 384, 256, 640, 640]; 
            data modify storage retina:data Surfaces.Bottom append value [0, 256, 384, 256, 256, 640];
            data modify storage retina:data Surfaces.West append value [0, 256, 384, 0, 640, 640];
            data modify storage retina:data Surfaces.East append value [256, 256, 384, 256, 640, 640];
            data modify storage retina:data Surfaces.North append value [0, 256, 384, 256, 640, 384];
            data modify storage retina:data Surfaces.South append value [0, 256, 640, 256, 640, 640];
        }
        if (block ~ ~ ~ minecraft:hopper[facing=south]) {
            data modify storage retina:data Surfaces.Top append value [384, 640, 768, 640, 640, 1024]; 
            data modify storage retina:data Surfaces.Bottom append value [384, 256, 768, 640, 256, 1024];
            data modify storage retina:data Surfaces.West append value [384, 256, 768, 384, 640, 1024];
            data modify storage retina:data Surfaces.East append value [640. 256, 768, 640, 640, 1024];
            data modify storage retina:data Surfaces.North append value [384, 256, 768, 640, 640, 768];
            data modify storage retina:data Surfaces.South append value [384, 256, 1024, 640, 640, 1024];
        }
        if (block ~ ~ ~ minecraft:hopper[facing=north]) {
            data modify storage retina:data Surfaces.Top append value [384, 640, 0, 640, 640, 256]; 
            data modify storage retina:data Surfaces.Bottom append value [384, 256, 0, 640, 256, 256];
            data modify storage retina:data Surfaces.West append value [384, 256, 0, 384, 640, 256];
            data modify storage retina:data Surfaces.East append value [640. 256, 0, 640, 640, 256];
            data modify storage retina:data Surfaces.North append value [384, 256, 0, 640, 640, 0];
            data modify storage retina:data Surfaces.South append value [384, 256, 256, 640, 640, 256];
        }
        if (block ~ ~ ~ minecraft:hopper[facing=down]) {
            data modify storage retina:data Surfaces.Top append value [384, 256, 384, 640, 256, 640]; 
            data modify storage retina:data Surfaces.Bottom append value [384, 0, 384, 640, 0, 640];
            data modify storage retina:data Surfaces.West append value [384, 0, 384, 384, 256, 640];
            data modify storage retina:data Surfaces.East append value [640, 0, 384, 640, 256, 640];
            data modify storage retina:data Surfaces.North append value [384, 0, 384, 640, 256, 384];
            data modify storage retina:data Surfaces.South append value [384, 0, 640, 640, 256, 640];
        }
    }
    function ladder() {
        if (block ~ ~ ~ minecraft:ladder[facing=east]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 128, 1024, 1024]], Bottom: [[0, 0, 0, 128, 0, 1024]], West: [[0, 0, 0, 0, 1024, 1024]], East: [[128, 0, 0, 128, 1024, 1024]], North: [[0, 0, 0, 128, 1024, 0]], South: [[0, 0, 1024, 128, 1024, 1024]]}
        if (block ~ ~ ~ minecraft:ladder[facing=west]) data modify storage retina:data Surfaces set value {Top: [[896, 1024, 0, 1024, 1024, 1024]], Bottom: [[896, 0, 0, 1024, 0, 1024]], West: [[896, 0, 0, 896, 1024, 1024]], East: [[1024, 0, 0, 1024, 1024, 1024]], North: [[896, 0, 0, 1024, 1024, 0]], South: [[896, 0, 1024, 1024, 1024, 1024]]}
        if (block ~ ~ ~ minecraft:ladder[facing=north]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 896, 1024, 1024, 1024]], Bottom: [[0, 0, 896, 1024, 0, 1024]], West: [[0, 0, 896, 0, 1024, 1024]], East: [[1024, 0, 896, 1024, 1024, 1024]], North: [[0, 0, 896, 1024, 1024, 896]], South: [[0, 0, 1024, 1024, 1024, 1024]]}
        if (block ~ ~ ~ minecraft:ladder[facing=south]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 128]], Bottom: [[0, 0, 0, 1024, 0, 128]], West: [[0, 0, 0, 0, 1024, 128]], East: [[1024, 0, 0, 1024, 1024, 128]], North: [[0, 0, 0, 1024, 1024, 0]], South: [[0, 0, 128, 1024, 1024, 128]]}
    }
    function lantern() {
        if (block ~ ~ ~ #retina:lantern[hanging=false]) data modify storage retina:data Surfaces set value {Top: [[320, 448, 320, 704, 448, 704], [384, 576, 384, 640, 576, 640]], Bottom: [[320, 0, 320, 704, 0, 704], [384, 448, 384, 640, 448, 640]], West: [[320, 0, 320, 320, 448, 704], [384, 448, 384, 384, 576, 640]], East: [[704, 0, 320, 704, 448, 704], [640, 448, 384, 640, 576, 640]], North: [[320, 0, 320, 704, 448, 320], [384, 448, 384, 640, 576, 384]], South: [[320, 0, 704, 704, 448, 704], [384, 448, 640, 640, 576, 640]]}
        if (block ~ ~ ~ #retina:lantern[hanging=true]) data modify storage retina:data Surfaces set value {Top: [[320, 512, 320, 704, 512, 704], [384, 640, 384, 640, 640, 640]], Bottom: [[320, 64, 320, 704, 64, 704], [384, 512, 384, 640, 512, 640]], West: [[320, 64, 320, 320, 512, 704], [384, 512, 384, 384, 640, 640]], East: [[704, 64, 320, 704, 512, 704], [640, 512, 384, 640, 640, 640]], North: [[320, 64, 320, 704, 512, 320], [384, 512, 384, 640, 640, 384]], South: [[320, 64, 704, 704, 512, 704], [384, 512, 640, 640, 640, 640]]}
    }
    function lever() {
        if (block ~ ~ ~ minecraft:lever[face=floor] && !block ~ ~ ~ minecraft:lever[facing=north] && !block ~ ~ ~ minecraft:lever[facing=south]) data modify storage retina:data Surfaces set value {Top: [[256, 384, 320, 768, 384, 704]], Bottom: [[256, 0, 320, 768, 0, 704]], West: [[256, 0, 320, 256, 384, 704]], East: [[768, 0, 320, 768, 384, 704]], North: [[256, 0, 320, 768, 384, 320]], South: [[256, 0, 704, 768, 384, 704]]}
        if (block ~ ~ ~ minecraft:lever[face=floor] && !block ~ ~ ~ minecraft:lever[facing=east] && !block ~ ~ ~ minecraft:lever[facing=west]) data modify storage retina:data Surfaces set value {Top: [[320, 384, 256, 704, 384, 768]], Bottom: [[320, 0, 256, 704, 0, 768]], West: [[320, 0, 256, 320, 384, 768]], East: [[704, 0, 256, 704, 384, 768]], North: [[320, 0, 256, 704, 384, 256]], South: [[320, 0, 768, 704, 384, 768]]}

        if (block ~ ~ ~ minecraft:lever[face=wall,facing=north]) data modify storage retina:data Surfaces set value {Top: [[704, 768, 768, 320, 768, 1024]], Bottom: [[704, 256, 768, 320, 256, 1024]], West: [[320, 256, 768, 320, 768, 1024]], East: [[704, 256, 768, 704, 768, 1024]], North: [[320, 256, 768, 704, 768, 768]], South: [[320, 256, 1024, 704, 768, 1024]]}
        if (block ~ ~ ~ minecraft:lever[face=wall,facing=south]) data modify storage retina:data Surfaces set value {Top: [[704, 768, 0, 320, 768, 384]], Bottom: [[704, 256, 0, 320, 256, 384]], West: [[320, 256, 0, 320, 768, 384]], East: [[704, 256, 0, 704, 768, 384]], North: [[320, 256, 0, 704, 768, 0]], South: [[320, 256, 384, 704, 768, 384]]}

        if (block ~ ~ ~ minecraft:lever[face=wall,facing=west]) data modify storage retina:data Surfaces set value {Top: [[768, 768, 320, 1024, 768, 704]], Bottom: [[768, 256, 320, 1024, 256, 704]], West: [[768, 256, 320, 768, 768, 704]], East: [[1024, 256, 320, 1024, 768, 704]], North: [[768, 256, 320, 1024, 768, 320]], South: [[768, 256, 704, 1024, 768, 704]]}
        if (block ~ ~ ~ minecraft:lever[face=wall,facing=east]) data modify storage retina:data Surfaces set value {Top: [[0, 768, 320, 384, 768, 704]], Bottom: [[0, 256, 320, 384, 256, 704]], West: [[0, 256, 320, 0, 768, 704]], East: [[384, 256, 320, 384, 768, 704]], North: [[0, 256, 320, 384, 768, 320]], South: [[0, 256, 704, 384, 768, 704]]}
    
        if (block ~ ~ ~ minecraft:lever[face=ceiling] && !block ~ ~ ~ minecraft:lever[facing=north] && !block ~ ~ ~ minecraft:lever[facing=south]) data modify storage retina:data Surfaces set value {Top: [[256, 1024, 320, 768, 1024, 704]], Bottom: [[256, 640, 320, 768, 640, 704]], West: [[256, 640, 320, 256, 1024, 704]], East: [[768, 640, 320, 768, 1024, 704]], North: [[256, 640, 320, 768, 1024, 320]], South: [[256, 640, 704, 768, 1024, 704]]}
        if (block ~ ~ ~ minecraft:lever[face=ceiling] && !block ~ ~ ~ minecraft:lever[facing=east] && !block ~ ~ ~ minecraft:lever[facing=west]) data modify storage retina:data Surfaces set value {Top: [[320, 1024, 256, 704, 1024, 768]], Bottom: [[320, 640, 256, 704, 640, 768]], West: [[320, 640, 256, 320, 1024, 768]], East: [[704, 640, 256, 704, 1024, 768]], North: [[320, 640, 256, 704, 1024, 256]], South: [[320, 640, 768, 704, 1024, 768]]}
    }
    function lily_pad() {
        data modify storage retina:data Surfaces set value {Top: [[64, 64, 64, 960, 64, 960]], Bottom: [[64, 0, 64, 960, 0, 960]], West: [[64, 0, 64, 64, 64, 960]], East: [[960, 0, 64, 960, 64, 960]], North: [[64, 0, 64, 960, 64, 64]], South: [[64, 0, 960, 960, 64, 960]]};
    }
    function mushroom_shaped() {
        data modify storage retina:data Surfaces set value {Top: [[320, 384, 320, 704, 384, 704]], Bottom: [[320, 0, 320, 704, 0, 704]], West: [[320, 0, 320, 320, 384, 704]], East: [[704, 0, 320, 704, 384, 704]], North: [[320, 0, 320, 704, 384, 320]], South: [[320, 0, 704, 704, 384, 704]]};
    }
    function nether_fungus() {
        data modify storage retina:data Surfaces set value {Top: [[256, 576, 256, 768, 576, 768]], Bottom: [[256, 0, 256, 768, 0, 768]], West: [[256, 0, 256, 256, 576, 768]], East: [[768, 0, 256, 768, 576, 768]], North: [[256, 0, 256, 768, 576, 256]], South: [[256, 0, 768, 768, 576, 768]]};
    }
    function nether_sprouts() {
        data modify storage retina:data Surfaces set value {Top: [[128, 192, 128, 896, 192, 896]], Bottom: [[128, 0, 128, 896, 0, 896]], West: [[128, 0, 128, 128, 192, 896]], East: [[896, 0, 128, 896, 192, 896]], North: [[128, 0, 128, 896, 192, 128]], South: [[128, 0, 896, 896, 192, 896]]};
    }
    function pane_shaped() {
        data modify storage retina:data Surfaces set value {Top: [[448, 1024, 448, 576, 1024, 576]], Bottom: [[448, 0, 448, 576, 0, 576]], West: [[448, 0, 448, 448, 1024, 576]], East: [[576, 0, 448, 576, 1024, 576]], North: [[448, 0, 448, 576, 1024, 448]], South: [[448, 0, 576, 576, 1024, 576]]};

        if (block ~ ~ ~ #retina:pane_shaped[east=true]) data modify storage retina:data Surfaces.Top append value [576, 1024, 448, 1024, 1024, 576];
        if (block ~ ~ ~ #retina:pane_shaped[east=true]) data modify storage retina:data Surfaces.Bottom append value [576, 0, 448, 1024, 0, 576];
        if (block ~ ~ ~ #retina:pane_shaped[east=true]) data modify storage retina:data Surfaces.West append value [576, 0, 448, 576, 1024, 576];
        if (block ~ ~ ~ #retina:pane_shaped[east=true]) data modify storage retina:data Surfaces.East append value [1024, 0, 448, 1024, 1024, 576];
        if (block ~ ~ ~ #retina:pane_shaped[east=true]) data modify storage retina:data Surfaces.North append value [576, 0, 448, 1024, 1024, 448];
        if (block ~ ~ ~ #retina:pane_shaped[east=true]) data modify storage retina:data Surfaces.South append value [576, 0, 576, 1024, 1024, 576];

        if (block ~ ~ ~ #retina:pane_shaped[west=true]) data modify storage retina:data Surfaces.Top append value [0, 1024, 448, 448, 1024, 576];
        if (block ~ ~ ~ #retina:pane_shaped[west=true]) data modify storage retina:data Surfaces.Bottom append value [0, 0, 448, 448, 0, 576];
        if (block ~ ~ ~ #retina:pane_shaped[west=true]) data modify storage retina:data Surfaces.West append value [0, 0, 448, 0, 1024, 576];
        if (block ~ ~ ~ #retina:pane_shaped[west=true]) data modify storage retina:data Surfaces.East append value [448, 0, 448, 448, 1024, 576];
        if (block ~ ~ ~ #retina:pane_shaped[west=true]) data modify storage retina:data Surfaces.North append value [0, 0, 448, 448, 1024, 448];
        if (block ~ ~ ~ #retina:pane_shaped[west=true]) data modify storage retina:data Surfaces.South append value [0, 0, 576, 448, 1024, 576];

        if (block ~ ~ ~ #retina:pane_shaped[south=true]) data modify storage retina:data Surfaces.Top append value [448, 1024, 576, 576, 1024, 1024];
        if (block ~ ~ ~ #retina:pane_shaped[south=true]) data modify storage retina:data Surfaces.Bottom append value [448, 0, 576, 576, 0, 1024];
        if (block ~ ~ ~ #retina:pane_shaped[south=true]) data modify storage retina:data Surfaces.West append value [448, 0, 576, 448, 1024, 1024];
        if (block ~ ~ ~ #retina:pane_shaped[south=true]) data modify storage retina:data Surfaces.East append value [576, 0, 576, 576, 1024, 1024];
        if (block ~ ~ ~ #retina:pane_shaped[south=true]) data modify storage retina:data Surfaces.North append value [448, 0, 576, 576, 1024, 576];
        if (block ~ ~ ~ #retina:pane_shaped[south=true]) data modify storage retina:data Surfaces.South append value [448, 0, 1024, 576, 1024, 1024];

        if (block ~ ~ ~ #retina:pane_shaped[north=true]) data modify storage retina:data Surfaces.Top append value [448, 1024, 0, 576, 1024, 448];
        if (block ~ ~ ~ #retina:pane_shaped[north=true]) data modify storage retina:data Surfaces.Bottom append value [448, 0, 0, 576, 0, 448];
        if (block ~ ~ ~ #retina:pane_shaped[north=true]) data modify storage retina:data Surfaces.West append value [448, 0, 0, 448, 1024, 448];
        if (block ~ ~ ~ #retina:pane_shaped[north=true]) data modify storage retina:data Surfaces.East append value [576, 0, 0, 576, 1024, 448];
        if (block ~ ~ ~ #retina:pane_shaped[north=true]) data modify storage retina:data Surfaces.North append value [448, 0, 0, 576, 1024, 0];
        if (block ~ ~ ~ #retina:pane_shaped[north=true]) data modify storage retina:data Surfaces.South append value [448, 0, 448, 576, 1024, 448];
    }
    function pickle() {
        if (block ~ ~ ~ minecraft:sea_pickle[pickles=1]) data modify storage retina:data Surfaces set value {Top: [[384, 384, 384, 640, 384, 640]], Bottom: [[384, 0, 384, 640, 0, 640]], West: [[384, 0, 384, 384, 384, 640]], East: [[640, 0, 384, 640, 384, 640]], North: [[384, 0, 384, 640, 384, 384]], South: [[384, 0, 640, 640, 384, 640]]}
        if (block ~ ~ ~ minecraft:sea_pickle[pickles=2]) data modify storage retina:data Surfaces set value {Top: [[192, 384, 192, 832, 384, 832]], Bottom: [[192, 0, 192, 832, 0, 832]], West: [[192, 0, 192, 192, 384, 832]], East: [[832, 0, 192, 832, 384, 832]], North: [[192, 0, 192, 832, 384, 192]], South: [[192, 0, 832, 832, 384, 832]]}
        if (block ~ ~ ~ minecraft:sea_pickle[pickles=3]) data modify storage retina:data Surfaces set value {Top: [[128, 384, 128, 896, 384, 896]], Bottom: [[128, 0, 128, 896, 0, 896]], West: [[128, 0, 128, 128, 384, 896]], East: [[896, 0, 128, 896, 384, 896]], North: [[128, 0, 128, 896, 384, 128]], South: [[128, 0, 896, 896, 384, 896]]}
        if (block ~ ~ ~ minecraft:sea_pickle[pickles=4]) data modify storage retina:data Surfaces set value {Top: [[128, 448, 128, 896, 448, 896]], Bottom: [[128, 0, 128, 896, 0, 896]], West: [[128, 0, 128, 128, 448, 896]], East: [[896, 0, 128, 896, 448, 896]], North: [[128, 0, 128, 896, 448, 128]], South: [[128, 0, 896, 896, 448, 896]]}
    }
    function pink_petals() {
        data modify storage retina:data Surfaces set value {Top: [[0, 192, 0, 1024, 192, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 192, 1024]], East: [[1024, 0, 0, 1024, 192, 1024]], North: [[0, 0, 0, 1024, 192, 0]], South: [[0, 0, 1024, 1024, 192, 1024]]};
    }
    function piglin_head() {
        data modify storage retina:data Surfaces set value {Top: [[192, 512, 192, 832, 512, 832]], Bottom: [[192, 0, 192, 832, 0, 832]], West: [[12, 0, 64, 64, 512, 832]], East: [[832, 0, 192, 832, 512, 832]], North: [[192, 0, 192, 832, 512, 192]], South: [[192, 0, 832, 832, 512, 832]]};
    }
    function pitcher_crop() {
        if (block ~ ~ ~ minecraft:pitcher_crop[age=0]) data modify storage retina:data Surfaces set value {Top: [[320, 192, 320, 704, 192, 704]], Bottom: [[320, 0, 320, 704, 0, 704]], West: [[12, 0, 64, 64, 192, 704]], East: [[704, 0, 320, 704, 192, 704]], North: [[320, 0, 320, 704, 192, 320]], South: [[320, 0, 704, 704, 192, 704]]}
        if (block ~ ~ ~ minecraft:pitcher_crop[age=1]) data modify storage retina:data Surfaces set value {Top: [[192, 896, 192, 832, 896, 832]], Bottom: [[192, 0, 192, 832, 0, 832]], West: [[12, 0, 64, 64, 896, 832]], East: [[832, 0, 192, 832, 896, 832]], North: [[192, 0, 192, 832, 896, 192]], South: [[192, 0, 832, 832, 896, 832]]}
        if (block ~ ~ ~ minecraft:pitcher_crop[age=2]) data modify storage retina:data Surfaces set value {Top: [[192, 1024, 192, 832, 1024, 832]], Bottom: [[192, 0, 192, 832, 0, 832]], West: [[12, 0, 64, 64, 1024, 832]], East: [[832, 0, 192, 832, 1024, 832]], North: [[192, 0, 192, 832, 1024, 192]], South: [[192, 0, 832, 832, 1024, 832]]}

        if (block ~ ~ ~ minecraft:pitcher_crop[age=3,half=lower]) data modify storage retina:data Surfaces set value {Top: [[192, 1024, 192, 832, 1024, 832]], Bottom: [[192, 0, 192, 832, 0, 832]], West: [[12, 0, 64, 64, 1024, 832]], East: [[832, 0, 192, 832, 1024, 832]], North: [[192, 0, 192, 832, 1024, 192]], South: [[192, 0, 832, 832, 1024, 832]]}
        if (block ~ ~ ~ minecraft:pitcher_crop[age=3,half=upper]) data modify storage retina:data Surfaces set value {Top: [[192, 704, 192, 832, 704, 832]], Bottom: [[192, 0, 192, 832, 0, 832]], West: [[12, 0, 64, 64, 704, 832]], East: [[832, 0, 192, 832, 704, 832]], North: [[192, 0, 192, 832, 704, 192]], South: [[192, 0, 832, 832, 704, 832]]}

        if (block ~ ~ ~ minecraft:pitcher_crop[age=4,half=lower]) data modify storage retina:data Surfaces set value {Top: [[192, 1024, 192, 832, 1024, 832]], Bottom: [[192, 0, 192, 832, 0, 832]], West: [[12, 0, 64, 64, 1024, 832]], East: [[832, 0, 192, 832, 1024, 832]], North: [[192, 0, 192, 832, 1024, 192]], South: [[192, 0, 832, 832, 1024, 832]]}
        if (block ~ ~ ~ minecraft:pitcher_crop[age=4,half=upper]) data modify storage retina:data Surfaces set value {Top: [[192, 960, 192, 832, 960, 832]], Bottom: [[192, 0, 192, 832, 0, 832]], West: [[12, 0, 64, 64, 960, 832]], East: [[832, 0, 192, 832, 960, 832]], North: [[192, 0, 192, 832, 960, 192]], South: [[192, 0, 832, 832, 960, 832]]}  
    }
    function pressure_plate() {
        if (block ~ ~ ~ #minecraft:pressure_plates[powered=false]) data modify storage retina:data Surfaces set value {Top: [[64, 64, 64, 960, 64, 960]], Bottom: [[64, 0, 64, 960, 0, 960]], West: [[64, 0, 64, 64, 64, 960]], East: [[960, 0, 64, 960, 64, 960]], North: [[64, 0, 64, 960, 64, 64]], South: [[64, 0, 960, 960, 64, 960]]}
        if (block ~ ~ ~ #minecraft:pressure_plates[powered=true]) data modify storage retina:data Surfaces set value {Top: [[64, 32, 64, 960, 32, 960]], Bottom: [[64, 0, 64, 960, 0, 960]], West: [[64, 0, 64, 64, 32, 960]], East: [[960, 0, 64, 960, 32, 960]], North: [[64, 0, 64, 960, 32, 64]], South: [[64, 0, 960, 960, 32, 960]]}
    }
    function rail() {
        if (!block ~ ~ ~ #retina:rail[shape=ascending_east] && !block ~ ~ ~ #retina:rail[shape=ascending_west] && !block ~ ~ ~ #retina:rail[shape=ascending_north] && !block ~ ~ ~ #retina:rail[shape=ascending_south]) data modify storage retina:data Surfaces set value {Top: [[0, 128, 0, 1024, 128, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 128, 1024]], East: [[1024, 0, 0, 1024, 128, 1024]], North: [[0, 0, 0, 1024, 128, 0]], South: [[0, 0, 1024, 1024, 128, 1024]]}
        if (!block ~ ~ ~ #retina:rail[shape=east_west] && !block ~ ~ ~ #retina:rail[shape=north_south]) data modify storage retina:data Surfaces set value {Top: [[0, 512, 0, 1024, 512, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 512, 1024]], East: [[1024, 0, 0, 1024, 512, 1024]], North: [[0, 0, 0, 1024, 512, 0]], South: [[0, 0, 1024, 1024, 512, 1024]]}
    }
    function repeater_shaped() {
        data modify storage retina:data Surfaces set value {Top: [[0, 128, 0, 1024, 128, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 128, 1024]], East: [[1024, 0, 0, 1024, 128, 1024]], North: [[0, 0, 0, 1024, 128, 0]], South: [[0, 0, 1024, 1024, 128, 1024]]};
    }
    function rod() {
        if (!block ~ ~ ~ #retina:rod[facing=north] && !block ~ ~ ~ #retina:rod[facing=south] && !block ~ ~ ~ #retina:rod[facing=up] && !block ~ ~ ~ #retina:rod[facing=down]) data modify storage retina:data Surfaces set value {Top: [[0, 608, 384, 1024, 640, 640]], Bottom: [[0, 384, 384, 1024, 384, 640]], West: [[0, 384, 384, 0, 640, 640]], East: [[1024, 384, 384, 1024, 640, 640]], North: [[0, 384, 384, 1024, 640, 384]], South: [[0, 384, 640, 1024, 640, 640]]}
        if (!block ~ ~ ~ #retina:rod[facing=north] && !block ~ ~ ~ #retina:rod[facing=south] && !block ~ ~ ~ #retina:rod[facing=east] && !block ~ ~ ~ #retina:rod[facing=west]) data modify storage retina:data Surfaces set value {Top: [[384, 1024, 384, 640, 1024, 640]], Bottom: [[384, 0, 384, 640, 0, 640]], West: [[384, 0, 384, 384, 1024, 640]], East: [[640, 0, 384, 640, 1024, 640]], North: [[384, 0, 384, 640, 1024, 384]], South: [[384, 0, 640, 640, 1024, 640]]}
        if (!block ~ ~ ~ #retina:rod[facing=east] && !block ~ ~ ~ #retina:rod[facing=west] && !block ~ ~ ~ #retina:rod[facing=up] && !block ~ ~ ~ #retina:rod[facing=down]) data modify storage retina:data Surfaces set value {Top: [[384, 640, 0, 640, 640, 1024]], Bottom: [[384, 384, 0, 640, 384, 1024]], West: [[384, 384, 0, 384, 640, 1024]], East: [[640, 384, 0, 640, 640, 1024]], North: [[384, 384, 0, 640, 640, 0]], South: [[384, 384, 1024, 640, 640, 1024]]}
    }
    function sapling() {
        data modify storage retina:data Surfaces set value {Top: [[128, 768, 128, 896, 768, 896]], Bottom: [[128, 0, 128, 896, 0, 896]], West: [[128, 0, 128, 128, 768, 896]], East: [[896, 0, 128, 896, 768, 896]], North: [[128, 0, 128, 896, 768, 128]], South: [[128, 0, 896, 896, 768, 896]]};
    }
    function seagrass() {
        data modify storage retina:data Surfaces set value {Top: [[128, 768, 128, 896, 768, 896]], Bottom: [[128, 0, 128, 896, 0, 896]], West: [[128, 0, 128, 128, 768, 896]], East: [[896, 0, 128, 896, 768, 896]], North: [[128, 0, 128, 896, 768, 128]], South: [[128, 0, 896, 896, 768, 896]]};
    }
    function short_crop() {
        if (block ~ ~ ~ #retina:short_crop[age=0]) data modify storage retina:data Surfaces set value {Top: [[0, 128, 0, 1024, 128, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 128, 1024]], East: [[1024, 0, 0, 1024, 128, 1024]], North: [[0, 0, 0, 1024, 128, 0]], South: [[0, 0, 1024, 1024, 128, 1024]]}
        if (block ~ ~ ~ #retina:short_crop[age=1]) data modify storage retina:data Surfaces set value {Top: [[0, 192, 0, 1024, 192, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 192, 1024]], East: [[1024, 0, 0, 1024, 192, 1024]], North: [[0, 0, 0, 1024, 192, 0]], South: [[0, 0, 1024, 1024, 192, 1024]]}
        if (block ~ ~ ~ #retina:short_crop[age=2]) data modify storage retina:data Surfaces set value {Top: [[0, 256, 0, 1024, 256, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 256, 1024]], East: [[1024, 0, 0, 1024, 256, 1024]], North: [[0, 0, 0, 1024, 256, 0]], South: [[0, 0, 1024, 1024, 256, 1024]]}
        if (block ~ ~ ~ #retina:short_crop[age=3]) data modify storage retina:data Surfaces set value {Top: [[0, 320, 0, 1024, 320, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 320, 1024]], East: [[1024, 0, 0, 1024, 320, 1024]], North: [[0, 0, 0, 1024, 320, 0]], South: [[0, 0, 1024, 1024, 320, 1024]]}
        if (block ~ ~ ~ #retina:short_crop[age=4]) data modify storage retina:data Surfaces set value {Top: [[0, 384, 0, 1024, 384, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 384, 1024]], East: [[1024, 0, 0, 1024, 384, 1024]], North: [[0, 0, 0, 1024, 384, 0]], South: [[0, 0, 1024, 1024, 384, 1024]]}
        if (block ~ ~ ~ #retina:short_crop[age=5]) data modify storage retina:data Surfaces set value {Top: [[0, 448, 0, 1024, 448, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 448, 1024]], East: [[1024, 0, 0, 1024, 448, 1024]], North: [[0, 0, 0, 1024, 448, 0]], South: [[0, 0, 1024, 1024, 448, 1024]]}
        if (block ~ ~ ~ #retina:short_crop[age=6]) data modify storage retina:data Surfaces set value {Top: [[0, 512, 0, 1024, 512, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 512, 1024]], East: [[1024, 0, 0, 1024, 512, 1024]], North: [[0, 0, 0, 1024, 512, 0]], South: [[0, 0, 1024, 1024, 512, 1024]]}
        if (block ~ ~ ~ #retina:short_crop[age=7]) data modify storage retina:data Surfaces set value {Top: [[0, 576, 0, 1024, 576, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 576, 1024]], East: [[1024, 0, 0, 1024, 576, 1024]], North: [[0, 0, 0, 1024, 576, 0]], South: [[0, 0, 1024, 1024, 576, 1024]]}
    }
    function slab() {
        if (block ~ ~ ~ #retina:sculk_sensor) data modify storage retina:data Surfaces set value {Top: [[0, 512,  0, 1024, 512,  1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 512, 1024]], East: [[1024, 0, 0, 1024, 512, 1024]], North: [[0, 0, 0, 1024, 512, 0]], South: [[0, 0, 1024, 1024, 512, 1024]]}
        if (block ~ ~ ~ #minecraft:slabs[type=bottom]) data modify storage retina:data Surfaces set value {Top: [[0, 512,  0, 1024, 512,  1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 512, 1024]], East: [[1024, 0, 0, 1024, 512, 1024]], North: [[0, 0, 0, 1024, 512, 0]], South: [[0, 0, 1024, 1024, 512, 1024]]}
        if (block ~ ~ ~ #minecraft:slabs[type=top]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 1024]], Bottom: [[0, 512, 0, 1024, 512, 1024]], West: [[0, 512, 0, 0, 1024, 1024]], East: [[1024, 512, 0, 1024, 1024, 1024]], North: [[0, 512, 0, 1024, 1024, 0]], South: [[0, 512, 1024, 1024, 1024, 1024]]}
        if (block ~ ~ ~ #minecraft:slabs[type=double]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 1024, 1024]], East: [[1024, 0, 0, 1024, 1024, 1024]], North: [[0, 0, 0, 1024, 1024, 0]], South: [[0, 0, 1024, 1024, 1024, 1024]]}
    }
    function small_dripleaf() {
        data modify storage retina:data Surfaces set value {Top: [[128, 832, 128, 896, 832, 896]], Bottom: [[128, 0, 128, 896, 0, 896]], West: [[128, 0, 128, 128, 832, 896]], East: [[896, 0, 128, 896, 832, 896]], North: [[128, 0, 128, 896, 832, 128]], South: [[128, 0, 896, 896, 832, 896]]};
    }
    function snow() {
        if (block ~ ~ ~ #retina:snow[layers=1]) data modify storage retina:data Surfaces set value {Top: [[0, 128, 0, 1024, 128, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 128, 1024]], East: [[1024, 0, 0, 1024, 128, 1024]], North: [[0, 0, 0, 1024, 128, 0]], South: [[0, 0, 1024, 1024, 128, 1024]]}
        if (block ~ ~ ~ #retina:snow[layers=2]) data modify storage retina:data Surfaces set value {Top: [[0, 256, 0, 1024, 256, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 256, 1024]], East: [[1024, 0, 0, 1024, 256, 1024]], North: [[0, 0, 0, 1024, 256, 0]], South: [[0, 0, 1024, 1024, 256, 1024]]}
        if (block ~ ~ ~ #retina:snow[layers=3]) data modify storage retina:data Surfaces set value {Top: [[0, 384, 0, 1024, 384, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 384, 1024]], East: [[1024, 0, 0, 1024, 384, 1024]], North: [[0, 0, 0, 1024, 384, 0]], South: [[0, 0, 1024, 1024, 384, 1024]]}
        if (block ~ ~ ~ #retina:snow[layers=4]) data modify storage retina:data Surfaces set value {Top: [[0, 512, 0, 1024, 512, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 512, 1024]], East: [[1024, 0, 0, 1024, 512, 1024]], North: [[0, 0, 0, 1024, 512, 0]], South: [[0, 0, 1024, 1024, 512, 1024]]}
        if (block ~ ~ ~ #retina:snow[layers=5]) data modify storage retina:data Surfaces set value {Top: [[0, 640, 0, 1024, 640, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 640, 1024]], East: [[1024, 0, 0, 1024, 640, 1024]], North: [[0, 0, 0, 1024, 640, 0]], South: [[0, 0, 1024, 1024, 640, 1024]]}
        if (block ~ ~ ~ #retina:snow[layers=6]) data modify storage retina:data Surfaces set value {Top: [[0, 768, 0, 1024, 768, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 768, 1024]], East: [[1024, 0, 0, 1024, 768, 1024]], North: [[0, 0, 0, 1024, 768, 0]], South: [[0, 0, 1024, 1024, 768, 1024]]}
        if (block ~ ~ ~ #retina:snow[layers=7]) data modify storage retina:data Surfaces set value {Top: [[0, 896, 0, 1024, 896, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 896, 1024]], East: [[1024, 0, 0, 1024, 896, 1024]], North: [[0, 0, 0, 1024, 896, 0]], South: [[0, 0, 1024, 1024, 896, 1024]]}
        if (block ~ ~ ~ #retina:snow[layers=8]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 1024, 1024]], East: [[1024, 0, 0, 1024, 1024, 1024]], North: [[0, 0, 0, 1024, 1024, 0]], South: [[0, 0, 1024, 1024, 1024, 1024]]}
    }
    function spore_blossom() {
        data modify storage retina:data Surfaces set value {Top: [[128, 1024, 128, 896, 1024, 896]], Bottom: [[128, 832, 128, 896, 832, 896]], West: [[128, 832, 128, 128, 1024, 896]], East: [[896, 832, 128, 896, 1024, 896]], North: [[128, 832, 128, 896, 1024, 128]], South: [[128, 832, 896, 896, 1024, 896]]};
    }
    function stair() {
        // half=bottom, shape=straight
        if (block ~ ~ ~ #minecraft:stairs[half=bottom, facing=east, shape=straight]) data modify storage retina:data Surfaces set value {Top: [[0, 512, 0, 1024, 512, 1024], [512, 1024, 0, 1024, 1024, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024], [512, 512, 0, 1024, 512, 1024]], West: [[0, 0, 0, 0, 512, 1024], [512, 512, 0, 512, 1024, 1024]], East: [[1024, 0, 0, 1024, 512, 1024], [1024, 512, 0, 1024, 1024, 1024]], North: [[0, 0, 0, 1024, 512, 0], [512, 512, 0, 1024, 1024, 0]], South: [[0, 0, 1024, 1024, 512, 1024], [512, 512, 1024, 1024, 1024, 1024]]}
        if (block ~ ~ ~ #minecraft:stairs[half=bottom, facing=west, shape=straight]) data modify storage retina:data Surfaces set value {Top: [[0, 512, 0, 1024, 512, 1024], [0, 1024, 0, 512, 1024, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024], [0, 512, 0, 512, 512, 1024]], West: [[0, 0, 0, 0, 512, 1024], [0, 512, 0, 0, 1024, 1024]], East: [[1024, 0, 0, 1024, 512, 1024], [512, 512, 0, 512, 1024, 1024]], North: [[0, 0, 0, 1024, 512, 0], [0, 512, 0, 512, 1024, 0]], South: [[0, 0, 1024, 1024, 512, 1024], [0, 512, 1024, 512, 1024, 1024]]}
        if (block ~ ~ ~ #minecraft:stairs[half=bottom, facing=south, shape=straight]) data modify storage retina:data Surfaces set value {Top: [[0, 512, 0, 1024, 512, 1024], [0, 1024, 512, 1024, 1024, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024], [0, 512, 512, 1024, 512, 1024]], West: [[0, 0, 0, 0, 512, 1024], [0, 512, 512, 0, 1024, 1024]], East: [[1024, 0, 0, 1024, 512, 1024], [1024, 512, 512, 1024, 1024, 1024]], North: [[0, 0, 0, 1024, 512, 0], [0, 512, 512, 1024, 1024, 512]], South: [[0, 0, 1024, 1024, 512, 1024], [0, 512, 1024, 1024, 1024, 1024]]}
        if (block ~ ~ ~ #minecraft:stairs[half=bottom, facing=north, shape=straight]) data modify storage retina:data Surfaces set value {Top: [[0, 512, 0, 1024, 512, 1024], [0, 1024, 0, 1024, 1024, 512]], Bottom: [[0, 0, 0, 1024, 0, 1024], [0, 512, 0, 1024, 512, 512]], West: [[0, 0, 0, 0, 512, 1024], [0, 512, 0, 0, 1024, 512]], East: [[1024, 0, 0, 1024, 512, 1024], [1024, 512, 0, 1024, 1024, 512]], North: [[0, 0, 0, 1024, 512, 0], [0, 512, 0, 1024, 1024, 0]], South: [[0, 0, 1024, 1024, 512, 1024], [0, 512, 512, 1024, 1024, 512]]}

        // half=top, shape=straight
        if (block ~ ~ ~ #minecraft:stairs[half=top, facing=east, shape=straight]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 1024], [512, 512, 0, 1024, 512, 1024]], Bottom: [[0, 512, 0, 1024, 512, 1024], [512, 0, 0, 1024, 0, 1024]], West: [[0, 512, 0, 0, 1024, 1024], [512, 0, 0, 512, 512, 1024]], East: [[1024, 512, 0, 1024, 1024, 1024], [1024, 0, 0, 1024, 512, 1024]], North: [[0, 512, 0, 1024, 1024, 0], [512, 0, 0, 1024, 512, 0]], South: [[0, 512, 1024, 1024, 1024, 1024], [512, 0, 1024, 1024, 512, 1024]]}
        if (block ~ ~ ~ #minecraft:stairs[half=top, facing=west, shape=straight]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 1024], [0, 512, 0, 512, 512, 1024]], Bottom: [[0, 512, 0, 1024, 512, 1024], [0, 0, 0, 512, 0, 1024]], West: [[0, 512, 0, 0, 1024, 1024], [0, 0, 0, 0, 512, 1024]], East: [[1024, 512, 0, 1024, 1024, 1024], [512, 0, 0, 512, 512, 1024]], North: [[0, 512, 0, 1024, 1024, 0], [0, 0, 0, 512, 512, 0]], South: [[0, 512, 1024, 1024, 1024, 1024], [0, 0, 1024, 512, 512, 1024]]}
        if (block ~ ~ ~ #minecraft:stairs[half=top, facing=south, shape=straight]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 1024], [0, 512, 512, 1024, 512, 1024]], Bottom: [[0, 512, 0, 1024, 512, 1024], [0, 0, 512, 1024, 0, 1024]], West: [[0, 512, 0, 0, 1024, 1024], [0, 0, 512, 0, 512, 1024]], East: [[1024, 512, 0, 1024, 1024, 1024], [1024, 0, 512, 1024, 512, 1024]], North: [[0, 512, 0, 1024, 1024, 0], [0, 0, 512, 1024, 512, 512]], South: [[0, 512, 1024, 1024, 1024, 1024], [0, 0, 1024, 1024, 512, 1024]]}
        if (block ~ ~ ~ #minecraft:stairs[half=top, facing=north, shape=straight]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 1024], [0, 512, 0, 1024, 512, 512]], Bottom: [[0, 512, 0, 1024, 512, 1024], [0, 0, 0, 1024, 0, 512]], West: [[0, 512, 0, 0, 1024, 1024], [0, 0, 0, 0, 512, 512]], East: [[1024, 512, 0, 1024, 1024, 1024], [1024, 0, 0, 1024, 512, 512]], North: [[0, 512, 0, 1024, 1024, 0], [0, 0, 0, 1024, 512, 0]], South: [[0, 512, 1024, 1024, 1024, 1024], [0, 0, 512, 1024, 512, 512]]}

        // half=bottom, shape=inner_left
        if (block ~ ~ ~ #minecraft:stairs[half=bottom, facing=east, shape=inner_left]) data modify storage retina:data Surfaces set value {Top: [[0, 512, 0, 1024, 512, 1024], [512, 1024, 0, 1024, 1024, 1024], [0, 1024, 0, 512, 1024, 512]], Bottom: [[0, 0, 0, 1024, 0, 1024], [512, 512, 0, 1024, 512, 1024], [0, 512, 0, 512, 512, 512]], West: [[0, 0, 0, 0, 512, 1024], [512, 512, 0, 512, 1024, 1024], [0, 512, 0, 0, 1024, 512]], East: [[1024, 0, 0, 1024, 512, 1024], [1024, 512, 0, 1024, 1024, 1024], [512, 512, 0, 512, 1024, 512]], North: [[0, 0, 0, 1024, 512, 0], [512, 512, 0, 1024, 1024, 0], [0, 512, 0, 512, 1024, 0]], South: [[0, 0, 1024, 1024, 512, 1024], [512, 512, 1024, 1024, 1024, 1024], [0, 512, 512, 512, 1024, 512]]}
        if (block ~ ~ ~ #minecraft:stairs[half=bottom, facing=west, shape=inner_left]) data modify storage retina:data Surfaces set value {Top: [[0, 512, 0, 1024, 512, 1024], [0, 1024, 0, 512, 1024, 1024], [512, 1024, 512, 1024, 1024, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024], [0, 512, 0, 512, 512, 1024], [512, 512, 512, 1024, 512, 1024]], West: [[0, 0, 0, 0, 512, 1024], [0, 512, 0, 0, 1024, 1024], [512, 512, 512, 512, 1024, 1024]], East: [[1024, 0, 0, 1024, 512, 1024], [512, 512, 0, 512, 1024, 1024], [1024, 512, 512, 1024, 1024, 1024]], North: [[0, 0, 0, 1024, 512, 0], [0, 512, 0, 512, 1024, 0], [512, 512, 512, 1024, 1024, 512]], South: [[0, 0, 1024, 1024, 512, 1024], [0, 512, 1024, 512, 1024, 1024], [512, 512, 1024, 1024, 1024, 1024]]}
        if (block ~ ~ ~ #minecraft:stairs[half=bottom, facing=south, shape=inner_left]) data modify storage retina:data Surfaces set value {Top: [[0, 512, 0, 1024, 512, 1024], [0, 1024, 512, 1024, 1024, 1024], [512, 1024, 0, 1024, 1024, 512]], Bottom: [[0, 0, 0, 1024, 0, 1024], [0, 512, 512, 1024, 512, 1024], [512, 512, 0, 1024, 512, 512]], West: [[0, 0, 0, 0, 512, 1024], [0, 512, 512, 0, 1024, 1024], [512, 512, 0, 512, 1024, 512]], East: [[1024, 0, 0, 1024, 512, 1024], [1024, 512, 512, 1024, 1024, 1024], [1024, 512, 0, 1024, 1024, 512]], North: [[0, 0, 0, 1024, 512, 0], [0, 512, 512, 1024, 1024, 512], [512, 512, 0, 1024, 1024, 0]], South: [[0, 0, 1024, 1024, 512, 1024], [0, 512, 1024, 1024, 1024, 1024], [512, 512, 512, 1024, 1024, 512]]}
        if (block ~ ~ ~ #minecraft:stairs[half=bottom, facing=north, shape=inner_left]) data modify storage retina:data Surfaces set value {Top: [[0, 512, 0, 1024, 512, 1024], [0, 1024, 0, 1024, 1024, 512], [0, 1024, 512, 512, 1024, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024], [0, 512, 0, 1024, 512, 512], [0, 512, 512, 512, 512, 1024]], West: [[0, 0, 0, 0, 512, 1024], [0, 512, 0, 0, 1024, 512], [0, 512, 512, 0, 1024, 1024]], East: [[1024, 0, 0, 1024, 512, 1024], [1024, 512, 0, 1024, 1024, 512], [512, 512, 512, 512, 1024, 1024]], North: [[0, 0, 0, 1024, 512, 0], [0, 512, 0, 1024, 1024, 0], [0, 512, 512, 512, 1024, 512]], South: [[0, 0, 1024, 1024, 512, 1024], [0, 512, 512, 1024, 1024, 512], [0, 512, 1024, 512, 1024, 1024]]}

        // half=top, shape=inner_left
        if (block ~ ~ ~ #minecraft:stairs[half=top, facing=east, shape=inner_left]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 1024], [512, 512, 0, 1024, 512, 1024], [0, 512, 0, 512, 512, 512]], Bottom: [[0, 512, 0, 1024, 512, 1024], [512, 0, 0, 1024, 0, 1024], [0, 0, 0, 512, 0, 512]], West: [[0, 512, 0, 0, 1024, 1024], [512, 0, 0, 512, 512, 1024], [0, 0, 0, 0, 512, 512]], East: [[1024, 512, 0, 1024, 1024, 1024], [1024, 0, 0, 1024, 512, 1024], [512, 0, 0, 512, 512, 512]], North: [[0, 512, 0, 1024, 1024, 0], [512, 0, 0, 1024, 512, 0], [0, 0, 0, 512, 512, 0]], South: [[0, 512, 1024, 1024, 1024, 1024], [512, 0, 1024, 1024, 512, 1024], [0, 0, 512, 512, 512, 512]]}
        if (block ~ ~ ~ #minecraft:stairs[half=top, facing=west, shape=inner_left]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 1024], [0, 512, 0, 512, 512, 1024], [512, 512, 512, 1024, 512, 1024]], Bottom: [[0, 512, 0, 1024, 512, 1024], [0, 0, 0, 512, 0, 1024], [512, 0, 512, 1024, 0, 1024]], West: [[0, 512, 0, 0, 1024, 1024], [0, 0, 0, 0, 512, 1024], [512, 0, 512, 512, 512, 1024]], East: [[1024, 512, 0, 1024, 1024, 1024], [512, 0, 0, 512, 512, 1024], [1024, 0, 512, 1024, 512, 1024]], North: [[0, 512, 0, 1024, 1024, 0], [0, 0, 0, 512, 512, 0], [512, 0, 512, 1024, 512, 512]], South: [[0, 512, 1024, 1024, 1024, 1024], [0, 0, 1024, 512, 512, 1024], [512, 0, 1024, 1024, 512, 1024]]}
        if (block ~ ~ ~ #minecraft:stairs[half=top, facing=south, shape=inner_left]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 1024], [0, 512, 512, 1024, 512, 1024], [512, 512, 0, 1024, 512, 512]], Bottom: [[0, 512, 0, 1024, 512, 1024], [0, 0, 512, 1024, 0, 1024], [512, 0, 0, 1024, 0, 512]], West: [[0, 512, 0, 0, 1024, 1024], [0, 0, 512, 0, 512, 1024], [512, 0, 0, 512, 512, 512]], East: [[1024, 512, 0, 1024, 1024, 1024], [1024, 0, 512, 1024, 512, 1024], [1024, 0, 0, 1024, 512, 512]], North: [[0, 512, 0, 1024, 1024, 0], [0, 0, 512, 1024, 512, 512], [512, 0, 0, 1024, 512, 0]], South: [[0, 512, 1024, 1024, 1024, 1024], [0, 0, 1024, 1024, 512, 1024], [512, 0, 512, 1024, 512, 512]]}
        if (block ~ ~ ~ #minecraft:stairs[half=top, facing=north, shape=inner_left]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 1024], [0, 512, 0, 1024, 512, 512], [0, 512, 512, 512, 512, 1024]], Bottom: [[0, 512, 0, 1024, 512, 1024], [0, 0, 0, 1024, 0, 512], [0, 0, 512, 512, 0, 1024]], West: [[0, 512, 0, 0, 1024, 1024], [0, 0, 0, 0, 512, 512], [0, 0, 512, 0, 512, 1024]], East: [[1024, 512, 0, 1024, 1024, 1024], [1024, 0, 0, 1024, 512, 512], [512, 0, 512, 512, 512, 1024]], North: [[0, 512, 0, 1024, 1024, 0], [0, 0, 0, 1024, 512, 0], [0, 0, 512, 512, 512, 512]], South: [[0, 512, 1024, 1024, 1024, 1024], [0, 0, 512, 1024, 512, 512], [0, 0, 1024, 512, 512, 1024]]}

        // half=bottom, shape=inner_right
        if (block ~ ~ ~ #minecraft:stairs[half=bottom, facing=east, shape=inner_right]) data modify storage retina:data Surfaces set value {Top: [[0, 512, 0, 1024, 512, 1024], [0, 1024, 512, 1024, 1024, 1024], [512, 1024, 0, 1024, 1024, 512]], Bottom: [[0, 0, 0, 1024, 0, 1024], [0, 512, 512, 1024, 512, 1024], [512, 512, 0, 1024, 512, 512]], West: [[0, 0, 0, 0, 512, 1024], [0, 512, 512, 0, 1024, 1024], [512, 512, 0, 512, 1024, 512]], East: [[1024, 0, 0, 1024, 512, 1024], [1024, 512, 512, 1024, 1024, 1024], [1024, 512, 0, 1024, 1024, 512]], North: [[0, 0, 0, 1024, 512, 0], [0, 512, 512, 1024, 1024, 512], [512, 512, 0, 1024, 1024, 0]], South: [[0, 0, 1024, 1024, 512, 1024], [0, 512, 1024, 1024, 1024, 1024], [512, 512, 512, 1024, 1024, 512]]}
        if (block ~ ~ ~ #minecraft:stairs[half=bottom, facing=west, shape=inner_right]) data modify storage retina:data Surfaces set value {Top: [[0, 512, 0, 1024, 512, 1024], [0, 1024, 0, 1024, 1024, 512], [0, 1024, 512, 512, 1024, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024], [0, 512, 0, 1024, 512, 512], [0, 512, 512, 512, 512, 1024]], West: [[0, 0, 0, 0, 512, 1024], [0, 512, 0, 0, 1024, 512], [0, 512, 512, 0, 1024, 1024]], East: [[1024, 0, 0, 1024, 512, 1024], [1024, 512, 0, 1024, 1024, 512], [512, 512, 512, 512, 1024, 1024]], North: [[0, 0, 0, 1024, 512, 0], [0, 512, 0, 1024, 1024, 0], [0, 512, 512, 512, 1024, 512]], South: [[0, 0, 1024, 1024, 512, 1024], [0, 512, 512, 1024, 1024, 512], [0, 512, 1024, 512, 1024, 1024]]}
        if (block ~ ~ ~ #minecraft:stairs[half=bottom, facing=south, shape=inner_right]) data modify storage retina:data Surfaces set value {Top: [[0, 512, 0, 1024, 512, 1024], [0, 1024, 512, 1024, 1024, 1024], [0, 1024, 0, 512, 1024, 512]], Bottom: [[0, 0, 0, 1024, 0, 1024], [0, 512, 512, 1024, 512, 1024], [0, 512, 0, 512, 512, 512]], West: [[0, 0, 0, 0, 512, 1024], [0, 512, 512, 0, 1024, 1024], [0, 512, 0, 0, 1024, 512]], East: [[1024, 0, 0, 1024, 512, 1024], [1024, 512, 512, 1024, 1024, 1024], [512, 512, 0, 512, 1024, 512]], North: [[0, 0, 0, 1024, 512, 0], [0, 512, 512, 1024, 1024, 512], [0, 512, 0, 512, 1024, 0]], South: [[0, 0, 1024, 1024, 512, 1024], [0, 512, 1024, 1024, 1024, 1024], [0, 512, 512, 512, 1024, 512]]}
        if (block ~ ~ ~ #minecraft:stairs[half=bottom, facing=north, shape=inner_right]) data modify storage retina:data Surfaces set value {Top: [[0, 512, 0, 1024, 512, 1024], [512, 1024, 0, 1024, 1024, 1024], [0, 1024, 0, 512, 1024, 512]], Bottom: [[0, 0, 0, 1024, 0, 1024], [512, 512, 0, 1024, 512, 1024], [0, 512, 0, 512, 512, 512]], West: [[0, 0, 0, 0, 512, 1024], [512, 512, 0, 512, 1024, 1024], [0, 512, 0, 0, 1024, 512]], East: [[1024, 0, 0, 1024, 512, 1024], [1024, 512, 0, 1024, 1024, 1024], [512, 512, 0, 512, 1024, 512]], North: [[0, 0, 0, 1024, 512, 0], [512, 512, 0, 1024, 1024, 0], [0, 512, 0, 512, 1024, 0]], South: [[0, 0, 1024, 1024, 512, 1024], [512, 512, 1024, 1024, 1024, 1024], [0, 512, 512, 512, 1024, 512]]}

        // half=top, shape=inner_right
        if (block ~ ~ ~ #minecraft:stairs[half=top, facing=east, shape=inner_right]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 1024], [0, 512, 512, 1024, 512, 1024], [512, 512, 0, 1024, 512, 512]], Bottom: [[0, 512, 0, 1024, 512, 1024], [0, 0, 512, 1024, 0, 1024], [512, 0, 0, 1024, 0, 512]], West: [[0, 512, 0, 0, 1024, 1024], [0, 0, 512, 0, 512, 1024], [512, 0, 0, 512, 512, 512]], East: [[1024, 512, 0, 1024, 1024, 1024], [1024, 0, 512, 1024, 512, 1024], [1024, 0, 0, 1024, 512, 512]], North: [[0, 512, 0, 1024, 1024, 0], [0, 0, 512, 1024, 512, 512], [512, 0, 0, 1024, 512, 0]], South: [[0, 512, 1024, 1024, 1024, 1024], [0, 0, 1024, 1024, 512, 1024], [512, 0, 512, 1024, 512, 512]]}
        if (block ~ ~ ~ #minecraft:stairs[half=top, facing=west, shape=inner_right]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 1024], [0, 512, 0, 1024, 512, 512], [0, 512, 512, 512, 512, 1024]], Bottom: [[0, 512, 0, 1024, 512, 1024], [0, 0, 0, 1024, 0, 512], [0, 0, 512, 512, 0, 1024]], West: [[0, 512, 0, 0, 1024, 1024], [0, 0, 0, 0, 512, 512], [0, 0, 512, 0, 512, 1024]], East: [[1024, 512, 0, 1024, 1024, 1024], [1024, 0, 0, 1024, 512, 512], [512, 0, 512, 512, 512, 1024]], North: [[0, 512, 0, 1024, 1024, 0], [0, 0, 0, 1024, 512, 0], [0, 0, 512, 512, 512, 512]], South: [[0, 512, 1024, 1024, 1024, 1024], [0, 0, 512, 1024, 512, 512], [0, 0, 1024, 512, 512, 1024]]}
        if (block ~ ~ ~ #minecraft:stairs[half=top, facing=south, shape=inner_right]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 1024], [0, 512, 0, 512, 512, 1024], [512, 512, 512, 1024, 512, 1024]], Bottom: [[0, 512, 0, 1024, 512, 1024], [0, 0, 0, 512, 0, 1024], [512, 0, 512, 1024, 0, 1024]], West: [[0, 512, 0, 0, 1024, 1024], [0, 0, 0, 0, 512, 1024], [512, 0, 512, 512, 512, 1024]], East: [[1024, 512, 0, 1024, 1024, 1024], [512, 0, 0, 512, 512, 1024], [1024, 0, 512, 1024, 512, 1024]], North: [[0, 512, 0, 1024, 1024, 0], [0, 0, 0, 512, 512, 0], [512, 0, 512, 1024, 512, 512]], South: [[0, 512, 1024, 1024, 1024, 1024], [0, 0, 1024, 512, 512, 1024], [512, 0, 1024, 1024, 512, 1024]]}
        if (block ~ ~ ~ #minecraft:stairs[half=top, facing=north, shape=inner_right]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 1024], [512, 512, 0, 1024, 512, 1024], [0, 512, 0, 512, 512, 512]], Bottom: [[0, 512, 0, 1024, 512, 1024], [512, 0, 0, 1024, 0, 1024], [0, 0, 0, 512, 0, 512]], West: [[0, 512, 0, 0, 1024, 1024], [512, 0, 0, 512, 512, 1024], [0, 0, 0, 0, 512, 512]], East: [[1024, 512, 0, 1024, 1024, 1024], [1024, 0, 0, 1024, 512, 1024], [512, 0, 0, 512, 512, 512]], North: [[0, 512, 0, 1024, 1024, 0], [512, 0, 0, 1024, 512, 0], [0, 0, 0, 512, 512, 0]], South: [[0, 512, 1024, 1024, 1024, 1024], [512, 0, 1024, 1024, 512, 1024], [0, 0, 512, 512, 512, 512]]}

        // half=bottom, shape=outer_left
        if (block ~ ~ ~ #minecraft:stairs[half=bottom, facing=east, shape=outer_left]) data modify storage retina:data Surfaces set value {Top: [[0, 512, 0, 1024, 512, 1024], [512, 1024, 0, 1024, 1024, 512]], Bottom: [[0, 0, 0, 1024, 0, 1024], [512, 512, 0, 1024, 512, 512]], West: [[0, 0, 0, 0, 512, 1024], [512, 512, 0, 512, 1024, 512]], East: [[1024, 0, 0, 1024, 512, 1024], [1024, 512, 0, 1024, 1024, 512]], North: [[0, 0, 0, 1024, 512, 0], [512, 512, 0, 1024, 1024, 0]], South: [[0, 0, 1024, 1024, 512, 1024], [512, 512, 512, 1024, 1024, 512]]}
        if (block ~ ~ ~ #minecraft:stairs[half=bottom, facing=west, shape=outer_left]) data modify storage retina:data Surfaces set value {Top: [[0, 512, 0, 1024, 512, 1024], [0, 1024, 512, 512, 1024, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024], [0, 512, 512, 512, 512, 1024]], West: [[0, 0, 0, 0, 512, 1024], [0, 512, 512, 0, 1024, 1024]], East: [[1024, 0, 0, 1024, 512, 1024], [512, 512, 512, 512, 1024, 1024]], North: [[0, 0, 0, 1024, 512, 0], [0, 512, 512, 512, 1024, 512]], South: [[0, 0, 1024, 1024, 512, 1024], [0, 512, 1024, 512, 1024, 1024]]}
        if (block ~ ~ ~ #minecraft:stairs[half=bottom, facing=south, shape=outer_left]) data modify storage retina:data Surfaces set value {Top: [[0, 512, 0, 1024, 512, 1024], [512, 1024, 512, 1024, 1024, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024], [512, 512, 512, 1024, 512, 1024]], West: [[0, 0, 0, 0, 512, 1024], [512, 512, 512, 512, 1024, 1024]], East: [[1024, 0, 0, 1024, 512, 1024], [1024, 512, 512, 1024, 1024, 1024]], North: [[0, 0, 0, 1024, 512, 0], [512, 512, 512, 1024, 1024, 512]], South: [[0, 0, 1024, 1024, 512, 1024], [512, 512, 1024, 1024, 1024, 1024]]}
        if (block ~ ~ ~ #minecraft:stairs[half=bottom, facing=north, shape=outer_left]) data modify storage retina:data Surfaces set value {Top: [[0, 512, 0, 1024, 512, 1024], [0, 1024, 0, 512, 1024, 512]], Bottom: [[0, 0, 0, 1024, 0, 1024], [0, 512, 0, 512, 512, 512]], West: [[0, 0, 0, 0, 512, 1024], [0, 512, 0, 0, 1024, 512]], East: [[1024, 0, 0, 1024, 512, 1024], [512, 512, 0, 512, 1024, 512]], North: [[0, 0, 0, 1024, 512, 0], [0, 512, 0, 512, 1024, 0]], South: [[0, 0, 1024, 1024, 512, 1024], [0, 512, 512, 512, 1024, 512]]}

        // half=top, shape=outer_left
        if (block ~ ~ ~ #minecraft:stairs[half=top, facing=east, shape=outer_left]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 1024], [512, 512, 0, 1024, 512, 512]], Bottom: [[0, 512, 0, 1024, 512, 1024], [512, 0, 0, 1024, 0, 512]], West: [[0, 512, 0, 0, 1024, 1024], [512, 0, 0, 512, 512, 512]], East: [[1024, 512, 0, 1024, 1024, 1024], [1024, 0, 0, 1024, 512, 512]], North: [[0, 512, 0, 1024, 1024, 0], [512, 0, 0, 1024, 512, 0]], South: [[0, 512, 1024, 1024, 1024, 1024], [512, 0, 512, 1024, 512, 512]]}
        if (block ~ ~ ~ #minecraft:stairs[half=top, facing=west, shape=outer_left]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 1024], [0, 512, 512, 512, 512, 1024]], Bottom: [[0, 512, 0, 1024, 512, 1024], [0, 0, 512, 512, 0, 1024]], West: [[0, 512, 0, 0, 1024, 1024], [0, 0, 512, 0, 512, 1024]], East: [[1024, 512, 0, 1024, 1024, 1024], [512, 0, 512, 512, 512, 1024]], North: [[0, 512, 0, 1024, 1024, 0], [0, 0, 512, 512, 512, 512]], South: [[0, 512, 1024, 1024, 1024, 1024], [0, 0, 1024, 512, 512, 1024]]}
        if (block ~ ~ ~ #minecraft:stairs[half=top, facing=south, shape=outer_left]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 1024], [512, 512, 512, 1024, 512, 1024]], Bottom: [[0, 512, 0, 1024, 512, 1024], [512, 0, 512, 1024, 0, 1024]], West: [[0, 512, 0, 0, 1024, 1024], [512, 0, 512, 512, 512, 1024]], East: [[1024, 512, 0, 1024, 1024, 1024], [1024, 0, 512, 1024, 512, 1024]], North: [[0, 512, 0, 1024, 1024, 0], [512, 0, 512, 1024, 512, 512]], South: [[0, 512, 1024, 1024, 1024, 1024], [512, 0, 1024, 1024, 512, 1024]]}
        if (block ~ ~ ~ #minecraft:stairs[half=top, facing=north, shape=outer_left]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 1024], [0, 512, 0, 512, 512, 512]], Bottom: [[0, 512, 0, 1024, 512, 1024], [0, 0, 0, 512, 0, 512]], West: [[0, 512, 0, 0, 1024, 1024], [0, 0, 0, 0, 512, 512]], East: [[1024, 512, 0, 1024, 1024, 1024], [512, 0, 0, 512, 512, 512]], North: [[0, 512, 0, 1024, 1024, 0], [0, 0, 0, 512, 512, 0]], South: [[0, 512, 1024, 1024, 1024, 1024], [0, 0, 512, 512, 512, 512]]}

        // half=bottom, shape=outer_right
        if (block ~ ~ ~ #minecraft:stairs[half=bottom, facing=east, shape=outer_right]) data modify storage retina:data Surfaces set value {Top: [[0, 512, 0, 1024, 512, 1024], [512, 1024, 512, 1024, 1024, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024], [512, 512, 512, 1024, 512, 1024]], West: [[0, 0, 0, 0, 512, 1024], [512, 512, 512, 512, 1024, 1024]], East: [[1024, 0, 0, 1024, 512, 1024], [1024, 512, 512, 1024, 1024, 1024]], North: [[0, 0, 0, 1024, 512, 0], [512, 512, 512, 1024, 1024, 512]], South: [[0, 0, 1024, 1024, 512, 1024], [512, 512, 1024, 1024, 1024, 1024]]}
        if (block ~ ~ ~ #minecraft:stairs[half=bottom, facing=west, shape=outer_right]) data modify storage retina:data Surfaces set value {Top: [[0, 512, 0, 1024, 512, 1024], [0, 1024, 0, 512, 1024, 512]], Bottom: [[0, 0, 0, 1024, 0, 1024], [0, 512, 0, 512, 512, 512]], West: [[0, 0, 0, 0, 512, 1024], [0, 512, 0, 0, 1024, 512]], East: [[1024, 0, 0, 1024, 512, 1024], [512, 512, 0, 512, 1024, 512]], North: [[0, 0, 0, 1024, 512, 0], [0, 512, 0, 512, 1024, 0]], South: [[0, 0, 1024, 1024, 512, 1024], [0, 512, 512, 512, 1024, 512]]}
        if (block ~ ~ ~ #minecraft:stairs[half=bottom, facing=south, shape=outer_right]) data modify storage retina:data Surfaces set value {Top: [[0, 512, 0, 1024, 512, 1024], [0, 1024, 512, 512, 1024, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024], [0, 512, 512, 512, 512, 1024]], West: [[0, 0, 0, 0, 512, 1024], [0, 512, 512, 0, 1024, 1024]], East: [[1024, 0, 0, 1024, 512, 1024], [512, 512, 512, 512, 1024, 1024]], North: [[0, 0, 0, 1024, 512, 0], [0, 512, 512, 512, 1024, 512]], South: [[0, 0, 1024, 1024, 512, 1024], [0, 512, 1024, 512, 1024, 1024]]}
        if (block ~ ~ ~ #minecraft:stairs[half=bottom, facing=north, shape=outer_right]) data modify storage retina:data Surfaces set value {Top: [[0, 512, 0, 1024, 512, 1024], [512, 1024, 0, 1024, 1024, 512]], Bottom: [[0, 0, 0, 1024, 0, 1024], [512, 512, 0, 1024, 512, 512]], West: [[0, 0, 0, 0, 512, 1024], [512, 512, 0, 512, 1024, 512]], East: [[1024, 0, 0, 1024, 512, 1024], [1024, 512, 0, 1024, 1024, 512]], North: [[0, 0, 0, 1024, 512, 0], [512, 512, 0, 1024, 1024, 0]], South: [[0, 0, 1024, 1024, 512, 1024], [512, 512, 512, 1024, 1024, 512]]}

        // half=top, shape=outer_right
        if (block ~ ~ ~ #minecraft:stairs[half=top, facing=east, shape=outer_right]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 1024], [512, 512, 512, 1024, 512, 1024]], Bottom: [[0, 512, 0, 1024, 512, 1024], [512, 0, 512, 1024, 0, 1024]], West: [[0, 512, 0, 0, 1024, 1024], [512, 0, 512, 512, 512, 1024]], East: [[1024, 512, 0, 1024, 1024, 1024], [1024, 0, 512, 1024, 512, 1024]], North: [[0, 512, 0, 1024, 1024, 0], [512, 0, 512, 1024, 512, 512]], South: [[0, 512, 1024, 1024, 1024, 1024], [512, 0, 1024, 1024, 512, 1024]]}
        if (block ~ ~ ~ #minecraft:stairs[half=top, facing=west, shape=outer_right]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 1024], [0, 512, 0, 512, 512, 512]], Bottom: [[0, 512, 0, 1024, 512, 1024], [0, 0, 0, 512, 0, 512]], West: [[0, 512, 0, 0, 1024, 1024], [0, 0, 0, 0, 512, 512]], East: [[1024, 512, 0, 1024, 1024, 1024], [512, 0, 0, 512, 512, 512]], North: [[0, 512, 0, 1024, 1024, 0], [0, 0, 0, 512, 512, 0]], South: [[0, 512, 1024, 1024, 1024, 1024], [0, 0, 512, 512, 512, 512]]}
        if (block ~ ~ ~ #minecraft:stairs[half=top, facing=south, shape=outer_right]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 1024], [0, 512, 512, 512, 512, 1024]], Bottom: [[0, 512, 0, 1024, 512, 1024], [0, 0, 512, 512, 0, 1024]], West: [[0, 512, 0, 0, 1024, 1024], [0, 0, 512, 0, 512, 1024]], East: [[1024, 512, 0, 1024, 1024, 1024], [512, 0, 512, 512, 512, 1024]], North: [[0, 512, 0, 1024, 1024, 0], [0, 0, 512, 512, 512, 512]], South: [[0, 512, 1024, 1024, 1024, 1024], [0, 0, 1024, 512, 512, 1024]]}
        if (block ~ ~ ~ #minecraft:stairs[half=top, facing=north, shape=outer_right]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 1024], [512, 512, 0, 1024, 512, 512]], Bottom: [[0, 512, 0, 1024, 512, 1024], [512, 0, 0, 1024, 0, 512]], West: [[0, 512, 0, 0, 1024, 1024], [512, 0, 0, 512, 512, 512]], East: [[1024, 512, 0, 1024, 1024, 1024], [1024, 0, 0, 1024, 512, 512]], North: [[0, 512, 0, 1024, 1024, 0], [512, 0, 0, 1024, 512, 0]], South: [[0, 512, 1024, 1024, 1024, 1024], [512, 0, 512, 1024, 512, 512]]}
    }
    function standing_sign_or_banner() {
        data modify storage retina:data Surfaces set value {Top: [[256, 1024, 256, 768, 1024, 768]], Bottom: [[256, 0, 256, 768, 0, 768]], West: [[256, 0, 256, 256, 1024, 768]], East: [[768, 0, 256, 768, 1024, 768]], North: [[256, 0, 256, 768, 1024, 256]], South: [[256, 0, 768, 768, 1024, 768]]};
    }
    function stonecutter() {
        data modify storage retina:data Surfaces set value {Top: [[0, 576, 0, 1024, 576, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 576, 1024]], East: [[1024, 0, 0, 1024, 576, 1024]], North: [[0, 0, 0, 1024, 576, 0]], South: [[0, 0, 1024, 1024, 576, 1024]]};
    }
    function stem() {
        if (block ~ ~ ~ #retina:stem[age=0]) data modify storage retina:data Surfaces set value {Top: [[448, 128, 448, 576, 128, 576]], Bottom: [[448, 0, 448, 576, 0, 576]], West: [[448, 0, 448, 448, 128, 576]], East: [[576, 0, 448, 576, 128, 576]], North: [[448, 0, 448, 576, 128, 448]], South: [[448, 0, 576, 576, 128, 576]]}
        if (block ~ ~ ~ #retina:stem[age=1]) data modify storage retina:data Surfaces set value {Top: [[448, 256, 448, 576, 256, 576]], Bottom: [[448, 0, 448, 576, 0, 576]], West: [[448, 0, 448, 448, 256, 576]], East: [[576, 0, 448, 576, 256, 576]], North: [[448, 0, 448, 576, 256, 448]], South: [[448, 0, 576, 576, 256, 576]]}
        if (block ~ ~ ~ #retina:stem[age=2]) data modify storage retina:data Surfaces set value {Top: [[448, 384, 448, 576, 384, 576]], Bottom: [[448, 0, 448, 576, 0, 576]], West: [[448, 0, 448, 448, 384, 576]], East: [[576, 0, 448, 576, 384, 576]], North: [[448, 0, 448, 576, 384, 448]], South: [[448, 0, 576, 576, 384, 576]]}
        if (block ~ ~ ~ #retina:stem[age=3]) data modify storage retina:data Surfaces set value {Top: [[448, 512, 448, 576, 512, 576]], Bottom: [[448, 0, 448, 576, 0, 576]], West: [[448, 0, 448, 448, 512, 576]], East: [[576, 0, 448, 576, 512, 576]], North: [[448, 0, 448, 576, 512, 448]], South: [[448, 0, 576, 576, 512, 576]]}
        if (block ~ ~ ~ #retina:stem[age=4]) data modify storage retina:data Surfaces set value {Top: [[448, 640, 448, 576, 640, 576]], Bottom: [[448, 0, 448, 576, 0, 576]], West: [[448, 0, 448, 448, 640, 576]], East: [[576, 0, 448, 576, 640, 576]], North: [[448, 0, 448, 576, 640, 448]], South: [[448, 0, 576, 576, 640, 576]]}
        if (block ~ ~ ~ #retina:stem[age=5]) data modify storage retina:data Surfaces set value {Top: [[448, 768, 448, 576, 768, 576]], Bottom: [[448, 0, 448, 576, 0, 576]], West: [[448, 0, 448, 448, 768, 576]], East: [[576, 0, 448, 576, 768, 576]], North: [[448, 0, 448, 576, 768, 448]], South: [[448, 0, 576, 576, 768, 576]]}
        if (block ~ ~ ~ #retina:stem[age=6]) data modify storage retina:data Surfaces set value {Top: [[448, 896, 448, 576, 896, 576]], Bottom: [[448, 0, 448, 576, 0, 576]], West: [[448, 0, 448, 448, 896, 576]], East: [[576, 0, 448, 576, 896, 576]], North: [[448, 0, 448, 576, 896, 448]], South: [[448, 0, 576, 576, 896, 576]]}
        if (block ~ ~ ~ #retina:stem[age=7]) data modify storage retina:data Surfaces set value {Top: [[448, 1024, 448, 576, 1024, 576]], Bottom: [[448, 0, 448, 576, 0, 576]], West: [[448, 0, 448, 448, 1024, 576]], East: [[576, 0, 448, 576, 1024, 576]], North: [[448, 0, 448, 576, 1024, 448]], South: [[448, 0, 576, 576, 1024, 576]]}
    }
    function structure_void() {
        data modify storage retina:data Surfaces set value {Top: [[384, 704, 384, 704, 704, 704]], Bottom: [[384, 384, 384, 704, 384, 704]], West: [[384, 384, 384, 384, 704, 704]], East: [[704, 384, 384, 704, 704, 704]], North: [[384, 384, 384, 704, 704, 384]], South: [[384, 384, 704, 704, 704, 704]]};
    }
    function sugar_cane_like() {
        data modify storage retina:data Surfaces set value {Top: [[128, 1024, 128, 896, 1024, 896]], Bottom: [[128, 0, 128, 896, 0, 896]], West: [[128, 0, 128, 128, 1024, 896]], East: [[896, 0, 128, 896, 1024, 896]], North: [[128, 0, 128, 896, 1024, 128]], South: [[128, 0, 896, 896, 1024, 896]]};
    }
    function tall_crop() {
        if (block ~ ~ ~ #retina:tall_crop[age=0]) data modify storage retina:data Surfaces set value {Top: [[0, 128, 0, 1024, 128, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 128, 1024]], East: [[1024, 0, 0, 1024, 128, 1024]], North: [[0, 0, 0, 1024, 128, 0]], South: [[0, 0, 1024, 1024, 128, 1024]]}
        if (block ~ ~ ~ #retina:tall_crop[age=1]) data modify storage retina:data Surfaces set value {Top: [[0, 256, 0, 1024, 256, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 256, 1024]], East: [[1024, 0, 0, 1024, 256, 1024]], North: [[0, 0, 0, 1024, 256, 0]], South: [[0, 0, 1024, 1024, 256, 1024]]}
        if (block ~ ~ ~ #retina:tall_crop[age=2]) data modify storage retina:data Surfaces set value {Top: [[0, 384, 0, 1024, 384, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 384, 1024]], East: [[1024, 0, 0, 1024, 384, 1024]], North: [[0, 0, 0, 1024, 384, 0]], South: [[0, 0, 1024, 1024, 384, 1024]]}
        if (block ~ ~ ~ #retina:tall_crop[age=3]) data modify storage retina:data Surfaces set value {Top: [[0, 512, 0, 1024, 512, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 512, 1024]], East: [[1024, 0, 0, 1024, 512, 1024]], North: [[0, 0, 0, 1024, 512, 0]], South: [[0, 0, 1024, 1024, 512, 1024]]}
        if (block ~ ~ ~ #retina:tall_crop[age=4]) data modify storage retina:data Surfaces set value {Top: [[0, 640, 0, 1024, 640, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 640, 1024]], East: [[1024, 0, 0, 1024, 640, 1024]], North: [[0, 0, 0, 1024, 640, 0]], South: [[0, 0, 1024, 1024, 640, 1024]]}
        if (block ~ ~ ~ #retina:tall_crop[age=5]) data modify storage retina:data Surfaces set value {Top: [[0, 768, 0, 1024, 768, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 768, 1024]], East: [[1024, 0, 0, 1024, 768, 1024]], North: [[0, 0, 0, 1024, 768, 0]], South: [[0, 0, 1024, 1024, 768, 1024]]}
        if (block ~ ~ ~ #retina:tall_crop[age=6]) data modify storage retina:data Surfaces set value {Top: [[0, 896, 0, 1024, 896, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 896, 1024]], East: [[1024, 0, 0, 1024, 896, 1024]], North: [[0, 0, 0, 1024, 896, 0]], South: [[0, 0, 1024, 1024, 896, 1024]]}
        if (block ~ ~ ~ #retina:tall_crop[age=7]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 1024, 1024]], East: [[1024, 0, 0, 1024, 1024, 1024]], North: [[0, 0, 0, 1024, 1024, 0]], South: [[0, 0, 1024, 1024, 1024, 1024]]}
    }
    function torchflower_crop() {
        if (block ~ ~ ~ minecraft:torchflower_crop[age=0]) data modify storage retina:data Surfaces set value {Top: [[320, 384, 320, 704, 384, 704]], Bottom: [[320, 0, 320, 704, 0, 704]], West: [[12, 0, 64, 64, 384, 704]], East: [[704, 0, 320, 704, 384, 704]], North: [[320, 0, 320, 704, 384, 320]], South: [[320, 0, 704, 704, 384, 704]]}
        if (block ~ ~ ~ minecraft:torchflower_crop[age=1]) data modify storage retina:data Surfaces set value {Top: [[320, 640, 320, 704, 640, 704]], Bottom: [[320, 0, 320, 704, 0, 704]], West: [[12, 0, 64, 64, 640, 704]], East: [[704, 0, 320, 704, 640, 704]], North: [[320, 0, 320, 704, 640, 320]], South: [[320, 0, 704, 704, 640, 704]]}
    }
    function trapdoor() {
        // open=false
        if (block ~ ~ ~ #minecraft:trapdoors[half=bottom, open=false]) data modify storage retina:data Surfaces set value {Top: [[0, 192, 0, 1024, 192, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 192, 1024]], East: [[1024, 0, 0, 1024, 192, 1024]], North: [[0, 0, 0, 1024, 192, 0]], South: [[0, 0, 1024, 1024, 192, 1024]]}
        if (block ~ ~ ~ #minecraft:trapdoors[half=top, open=false]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 1024]], Bottom: [[0, 832, 0, 1024, 832, 1024]], West: [[0, 832, 0, 0, 1024, 1024]], East: [[1024, 832, 0, 1024, 1024, 1024]], North: [[0, 832, 0, 1024, 1024, 0]], South: [[0, 832, 1024, 1024, 1024, 1024]]}

        // open=true
        if (block ~ ~ ~ #minecraft:trapdoors[facing=east, open=true]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 192, 1024, 1024]], Bottom: [[0, 0, 0, 192, 0, 1024]], West: [[0, 0, 0, 0, 1024, 1024]], East: [[192, 0, 0, 192, 1024, 1024]], North: [[0, 0, 0, 192, 1024, 0]], South: [[0, 0, 1024, 192, 1024, 1024]]}
        if (block ~ ~ ~ #minecraft:trapdoors[facing=west, open=true]) data modify storage retina:data Surfaces set value {Top: [[832, 1024, 0, 1024, 1024, 1024]], Bottom: [[832, 0, 0, 1024, 0, 1024]], West: [[832, 0, 0, 832, 1024, 1024]], East: [[1024, 0, 0, 1024, 1024, 1024]], North: [[832, 0, 0, 1024, 1024, 0]], South: [[832, 0, 1024, 1024, 1024, 1024]]}
        if (block ~ ~ ~ #minecraft:trapdoors[facing=south, open=true]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 0, 1024, 1024, 192]], Bottom: [[0, 0, 0, 1024, 0, 192]], West: [[0, 0, 0, 0, 1024, 192]], East: [[1024, 0, 0, 1024, 1024, 192]], North: [[0, 0, 0, 1024, 1024, 0]], South: [[0, 0, 192, 1024, 1024, 192]]}
        if (block ~ ~ ~ #minecraft:trapdoors[facing=north, open=true]) data modify storage retina:data Surfaces set value {Top: [[0, 1024, 832, 1024, 1024, 1024]], Bottom: [[0, 0, 832, 1024, 0, 1024]], West: [[0, 0, 832, 0, 1024, 1024]], East: [[1024, 0, 832, 1024, 1024, 1024]], North: [[0, 0, 832, 1024, 1024, 832]], South: [[0, 0, 1024, 1024, 1024, 1024]]}
    }
    function tripwire() {
        if (block ~ ~ ~ minecraft:tripwire[attached=false]) data modify storage retina:data Surfaces set value {Top: [[0, 512, 0, 1024, 512, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 512, 1024]], East: [[1024, 0, 0, 1024, 512, 1024]], North: [[0, 0, 0, 1024, 512, 0]], South: [[0, 0, 1024, 1024, 512, 1024]]}
        if (block ~ ~ ~ minecraft:tripwire[attached=true]) data modify storage retina:data Surfaces set value {Top: [[0, 64, 0, 1024, 64, 1024]], Bottom: [[0, 0, 0, 1024, 0, 1024]], West: [[0, 0, 0, 0, 64, 1024]], East: [[1024, 0, 0, 1024, 64, 1024]], North: [[0, 0, 0, 1024, 64, 0]], South: [[0, 0, 1024, 1024, 64, 1024]]}
    }
    function tripwire_hook() {
        if (block ~ ~ ~ minecraft:tripwire_hook[facing=east]) data modify storage retina:data Surfaces set value {Top: [[0, 640, 320, 448, 640, 704]], Bottom: [[0, 0, 320, 448, 0, 704]], West: [[0, 0, 320, 0, 640, 704]], East: [[448, 0, 320, 448, 640, 704]], North: [[0, 0, 320, 448, 640, 320]], South: [[0, 0, 704, 448, 640, 704]]}
        if (block ~ ~ ~ minecraft:tripwire_hook[facing=west]) data modify storage retina:data Surfaces set value {Top: [[576, 640, 320, 1024, 640, 704]], Bottom: [[576, 0, 320, 1024, 0, 704]], West: [[576, 0, 320, 576, 640, 704]], East: [[1024, 0, 320, 1024, 640, 704]], North: [[576, 0, 320, 1024, 640, 320]], South: [[576, 0, 704, 1024, 640, 704]]}

        if (block ~ ~ ~ minecraft:tripwire_hook[facing=south]) data modify storage retina:data Surfaces set value {Top: [[320, 640, 0, 704, 640, 448]], Bottom: [[320, 0, 0, 704, 0, 448]], West: [[320, 0, 0, 320, 640, 448]], East: [[704, 0, 0, 704, 640, 448]], North: [[320, 0, 0, 704, 640, 0]], South: [[320, 0, 448, 704, 640, 448]]}
        if (block ~ ~ ~ minecraft:tripwire_hook[facing=north]) data modify storage retina:data Surfaces set value {Top: [[320, 640, 576, 704, 640, 1024]], Bottom: [[320, 0, 576, 704, 0, 1024]], West: [[320, 0, 576, 320, 640, 1024]], East: [[704, 0, 576, 704, 640, 1024]], North: [[320, 0, 576, 704, 640, 576]], South: [[320, 0, 1024, 704, 640, 1024]]}
    }
    function turtle_egg() {
        if (block ~ ~ ~ minecraft:turtle_egg[eggs=1]) data modify storage retina:data Surfaces set value {Top: [[192, 448, 192, 768, 448, 768]], Bottom: [[192, 0, 192, 768, 0, 768]], West: [[192, 0, 192, 192, 448, 768]], East: [[768, 0, 192, 768, 448, 768]], North: [[192, 0, 192, 768, 448, 192]], South: [[192, 0, 768, 768, 448, 768]]}
        if (!block ~ ~ ~ minecraft:turtle_egg[eggs=1]) data modify storage retina:data Surfaces set value {Top: [[64, 448, 64, 960, 448, 960]], Bottom: [[64, 0, 64, 960, 0, 960]], West: [[64, 0, 64, 64, 448, 960]], East: [[960, 0, 64, 960, 448, 960]], North: [[64, 0, 64, 960, 448, 64]], South: [[64, 0, 960, 960, 448, 960]]}
    }
    function twisting_vines() {
        data modify storage retina:data Surfaces set value {Top: [[256, 960, 256, 768, 960, 768]], Bottom: [[256, 0, 256, 768, 0, 768]], West: [[256, 0, 256, 256, 960, 768]], East: [[768, 0, 256, 768, 960, 768]], North: [[256, 0, 256, 768, 960, 256]], South: [[256, 0, 768, 768, 960, 768]]};
    }
    function vertical_torch() {
        data modify storage retina:data Surfaces set value {Top: [[384, 768, 384, 768, 768, 768]], Bottom: [[384, 0, 384, 768, 0, 768]], West: [[384, 0, 384, 384, 768, 768]], East: [[768, 0, 384, 768, 768, 768]], North: [[384, 0, 384, 768, 768, 384]], South: [[384, 0, 768, 768, 768, 768]]};
    }
    function vine_like() {
        if (block ~ ~ ~ #retina:vine[up=true]) {
            data modify storage retina:data Surfaces.Top append value [0, 1024, 0, 1024, 1024, 1024]; 
            data modify storage retina:data Surfaces.Bottom append value [0, 960, 0, 1024, 960, 1024]; 
            data modify storage retina:data Surfaces.West append value [0, 960, 0, 0, 1024, 1024]; 
            data modify storage retina:data Surfaces.East append value [1024, 960, 0, 1024, 1024, 1024]; 
            data modify storage retina:data Surfaces.North append value [0, 960, 0, 1024, 1024, 0];
            data modify storage retina:data Surfaces.South append value [0, 960, 1024, 1024, 1024, 1024];
        }
        if (block ~ ~ ~ #retina:vine[down=true]) {
            data modify storage retina:data Surfaces.Top append value [0, 64, 0, 1024, 64, 1024]; 
            data modify storage retina:data Surfaces.Bottom append value [0, 0, 0, 1024, 0, 1024]; 
            data modify storage retina:data Surfaces.West append value [0, 0, 0, 0, 64, 1024]; 
            data modify storage retina:data Surfaces.East append value [1024, 0, 0, 1024, 64, 1024]; 
            data modify storage retina:data Surfaces.North append value [0, 0, 0, 1024, 64, 0];
            data modify storage retina:data Surfaces.South append value [0, 0, 1024, 1024, 64, 1024];
        }
        if (block ~ ~ ~ #retina:vine[north=true]) {
            data modify storage retina:data Surfaces.Top append value [0, 1024, 0, 1024, 1024, 64];
            data modify storage retina:data Surfaces.Bottom append value [0, 0, 0, 1024, 0, 64];
            data modify storage retina:data Surfaces.West append value [0, 0, 0, 0, 1024, 64];
            data modify storage retina:data Surfaces.East append value [1024, 0, 0, 1024, 1024, 64];
            data modify storage retina:data Surfaces.North append value [0, 0, 0, 1024, 1024, 0];
            data modify storage retina:data Surfaces.South append value [0, 0, 64, 1024, 1024, 64];
        }
        if (block ~ ~ ~ #retina:vine[south=true]) {
            data modify storage retina:data Surfaces.Top append value [0, 1024, 960, 1024, 1024, 1024];
            data modify storage retina:data Surfaces.Bottom append value [0, 0, 960, 1024, 0, 1024];
            data modify storage retina:data Surfaces.West append value [0, 0, 960, 0, 1024, 1024];
            data modify storage retina:data Surfaces.East append value [1024, 0, 960, 1024, 1024, 1024];
            data modify storage retina:data Surfaces.North append value [0, 0, 960, 1024, 1024, 960];
            data modify storage retina:data Surfaces.South append value [0, 0, 1024, 1024, 1024, 1024];
        }
        if (block ~ ~ ~ #retina:vine[west=true]) {
            data modify storage retina:data Surfaces.Top append value [0, 1024, 0, 64, 1024, 1024];
            data modify storage retina:data Surfaces.Bottom append value [0, 0, 0, 64, 0, 1024];
            data modify storage retina:data Surfaces.West append value [0, 0, 0, 0, 1024, 1024];
            data modify storage retina:data Surfaces.East append value [64, 0, 0, 64, 1024, 1024];
            data modify storage retina:data Surfaces.North append value [0, 0, 0, 64, 1024, 0];
            data modify storage retina:data Surfaces.South append value [0, 0, 1024, 64, 1024, 1024];
        }
        if (block ~ ~ ~ #retina:vine[east=true]) {
            data modify storage retina:data Surfaces.Top append value [960, 1024, 0, 1024, 1024, 1024];
            data modify storage retina:data Surfaces.Bottom append value [960, 0, 0, 1024, 0, 1024];
            data modify storage retina:data Surfaces.West append value [960, 0, 0, 960, 1024, 1024];
            data modify storage retina:data Surfaces.East append value [1024, 0, 0, 1024, 1024, 1024];
            data modify storage retina:data Surfaces.North append value [960, 0, 0, 1024, 1024, 0];
            data modify storage retina:data Surfaces.South append value [960, 0, 1024, 1024, 1024, 1024];
        }
    }
    function wall_sign() {
        if (block ~ ~ ~ #minecraft:wall_signs[facing=east]) data modify storage retina:data Surfaces set value {Top: [[0, 800, 0, 128, 800, 1024]], Bottom: [[0, 224, 0, 128, 224, 1024]], West: [[0, 224, 0, 0, 800, 1024]], East: [[128, 224, 0, 128, 800, 1024]], North: [[0, 224, 0, 128, 800, 0]], South: [[0, 224, 1024, 128, 800, 1024]]}
        if (block ~ ~ ~ #minecraft:wall_signs[facing=west]) data modify storage retina:data Surfaces set value {Top: [[896, 800, 0, 1024, 800, 1024]], Bottom: [[896, 224, 0, 1024, 224, 1024]], West: [[896, 224, 0, 896, 800, 1024]], East: [[1024, 224, 0, 1024, 800, 1024]], North: [[896, 224, 0, 1024, 800, 0]], South: [[896, 224, 1024, 1024, 800, 1024]]}
        if (block ~ ~ ~ #minecraft:wall_signs[facing=south]) data modify storage retina:data Surfaces set value {Top: [[0, 800, 0, 1024, 800, 128]], Bottom: [[0, 224, 0, 1024, 224, 128]], West: [[0, 224, 0, 0, 800, 128]], East: [[1024, 224, 0, 1024, 800, 128]], North: [[0, 224, 0, 1024, 800, 0]], South: [[0, 224, 128, 1024, 800, 128]]}
        if (block ~ ~ ~ #minecraft:wall_signs[facing=north]) data modify storage retina:data Surfaces set value {Top: [[0, 800, 896, 1024, 800, 1024]], Bottom: [[0, 224, 896, 1024, 224, 1024]], West: [[0, 224, 896, 0, 800, 1024]], East: [[1024, 224, 896, 1024, 800, 1024]], North: [[0, 224, 896, 1024, 800, 896]], South: [[0, 224, 1024, 1024, 800, 1024]]}
    }
    function wall_torch() {
                
        if (block ~ ~ ~ #retina:wall_torch[facing=east]) data modify storage retina:data Surfaces set value {Top: [[0, 832, 352, 320, 832, 672]], Bottom: [[0, 192, 352, 320, 192, 672]], West: [[0, 192, 352, 0, 832, 672]], East: [[320, 192, 352, 320, 832, 672]], North: [[0, 192, 352, 320, 832, 352]], South: [[0, 192, 672, 320, 832, 672]]}
        if (block ~ ~ ~ #retina:wall_torch[facing=west]) data modify storage retina:data Surfaces set value {Top: [[704, 832, 352, 1024, 832, 672]], Bottom: [[704, 192, 352, 1024, 192, 672]], West: [[704, 192, 352, 704, 832, 672]], East: [[1024, 192, 352, 1024, 832, 672]], North: [[704, 192, 352, 1024, 832, 352]], South: [[704, 192, 672, 1024, 832, 672]]}
        if (block ~ ~ ~ #retina:wall_torch[facing=north]) data modify storage retina:data Surfaces set value {Top: [[352, 832, 704, 672, 832, 1024]], Bottom: [[352, 192, 704, 672, 192, 1024]], West: [[352, 192, 704, 352, 832, 1024]], East: [[672, 192, 704, 672, 832, 1024]], North: [[352, 192, 704, 672, 832, 704]], South: [[352, 192, 1024, 672, 832, 1024]]}
        if (block ~ ~ ~ #retina:wall_torch[facing=south]) data modify storage retina:data Surfaces set value {Top: [[352, 832, 0, 672, 832, 320]], Bottom: [[352, 192, 0, 672, 192, 320]], West: [[352, 192, 0, 352, 832, 320]], East: [[672, 192, 0, 672, 832, 320]], North: [[352, 192, 0, 672, 832, 0]], South: [[352, 192, 320, 672, 832, 320]]}
    }
    function wall() {
        data modify storage retina:data Surfaces set value {Top: [[256, 1024, 256, 768, 1024, 768]], Bottom: [[256, 0, 256, 768, 0, 768]], West: [[256, 0, 256, 256, 1024, 768]], East: [[768, 0, 256, 768, 1024, 768]], North: [[256, 0, 256, 768, 1024, 256]], South: [[256, 0, 768, 768, 1024, 768]]};

        // Low
        if (block ~ ~ ~ #minecraft:walls[east=low]) data modify storage retina:data Surfaces.Top append value [768, 896, 320, 1024, 896, 704];
        if (block ~ ~ ~ #minecraft:walls[east=low]) data modify storage retina:data Surfaces.Bottom append value [768, 0, 320, 1024, 0, 704];
        if (block ~ ~ ~ #minecraft:walls[east=low]) data modify storage retina:data Surfaces.West append value [768, 0, 320, 768, 896, 704];
        if (block ~ ~ ~ #minecraft:walls[east=low]) data modify storage retina:data Surfaces.East append value [1024, 0, 320, 1024, 896, 704];
        if (block ~ ~ ~ #minecraft:walls[east=low]) data modify storage retina:data Surfaces.North append value [768, 0, 320, 1024, 896, 320];
        if (block ~ ~ ~ #minecraft:walls[east=low]) data modify storage retina:data Surfaces.South append value [768, 0, 704, 1024, 896, 704];

        if (block ~ ~ ~ #minecraft:walls[west=low]) data modify storage retina:data Surfaces.Top append value [0, 896, 320, 256, 896, 704];
        if (block ~ ~ ~ #minecraft:walls[west=low]) data modify storage retina:data Surfaces.Bottom append value [0, 0, 320, 256, 0, 704];
        if (block ~ ~ ~ #minecraft:walls[west=low]) data modify storage retina:data Surfaces.West append value [0, 0, 320, 0, 896, 704];
        if (block ~ ~ ~ #minecraft:walls[west=low]) data modify storage retina:data Surfaces.East append value [256, 0, 320, 256, 896, 704];
        if (block ~ ~ ~ #minecraft:walls[west=low]) data modify storage retina:data Surfaces.North append value [0, 0, 320, 256, 896, 320];
        if (block ~ ~ ~ #minecraft:walls[west=low]) data modify storage retina:data Surfaces.South append value [0, 0, 704, 256, 896, 704];

        if (block ~ ~ ~ #minecraft:walls[north=low]) data modify storage retina:data Surfaces.Top append value [320, 896, 0, 704, 896, 256];
        if (block ~ ~ ~ #minecraft:walls[north=low]) data modify storage retina:data Surfaces.Bottom append value [320, 0, 0, 704, 0, 256];
        if (block ~ ~ ~ #minecraft:walls[north=low]) data modify storage retina:data Surfaces.West append value [320, 0, 0, 320, 896, 256];
        if (block ~ ~ ~ #minecraft:walls[north=low]) data modify storage retina:data Surfaces.East append value [704, 0, 0, 704, 896, 256];
        if (block ~ ~ ~ #minecraft:walls[north=low]) data modify storage retina:data Surfaces.North append value [320, 0, 0, 704, 896, 0];
        if (block ~ ~ ~ #minecraft:walls[north=low]) data modify storage retina:data Surfaces.South append value [320, 0, 256, 704, 896, 256];

        if (block ~ ~ ~ #minecraft:walls[south=low]) data modify storage retina:data Surfaces.Top append value [320, 896, 768, 704, 896, 1024];
        if (block ~ ~ ~ #minecraft:walls[south=low]) data modify storage retina:data Surfaces.Bottom append value [320, 0, 768, 704, 0, 1024];
        if (block ~ ~ ~ #minecraft:walls[south=low]) data modify storage retina:data Surfaces.West append value [320, 0, 768, 320, 896, 1024];
        if (block ~ ~ ~ #minecraft:walls[south=low]) data modify storage retina:data Surfaces.East append value [704, 0, 768, 704, 896, 1024];
        if (block ~ ~ ~ #minecraft:walls[south=low]) data modify storage retina:data Surfaces.North append value [320, 0, 768, 704, 896, 768];
        if (block ~ ~ ~ #minecraft:walls[south=low]) data modify storage retina:data Surfaces.South append value [320, 0, 1024, 704, 896, 1024];

        // Tall
        if (block ~ ~ ~ #minecraft:walls[east=tall]) data modify storage retina:data Surfaces.Top append value [768, 1024, 320, 1024, 1024, 704];
        if (block ~ ~ ~ #minecraft:walls[east=tall]) data modify storage retina:data Surfaces.Bottom append value [768, 0, 320, 1024, 0, 704];
        if (block ~ ~ ~ #minecraft:walls[east=tall]) data modify storage retina:data Surfaces.West append value [768, 0, 320, 768, 1024, 704];
        if (block ~ ~ ~ #minecraft:walls[east=tall]) data modify storage retina:data Surfaces.East append value [1024, 0, 320, 1024, 1024, 704];
        if (block ~ ~ ~ #minecraft:walls[east=tall]) data modify storage retina:data Surfaces.North append value [768, 0, 320, 1024, 1024, 320];
        if (block ~ ~ ~ #minecraft:walls[east=tall]) data modify storage retina:data Surfaces.South append value [768, 0, 704, 1024, 1024, 704];

        if (block ~ ~ ~ #minecraft:walls[west=tall]) data modify storage retina:data Surfaces.Top append value [0, 1024, 320, 256, 1024, 704];
        if (block ~ ~ ~ #minecraft:walls[west=tall]) data modify storage retina:data Surfaces.Bottom append value [0, 0, 320, 256, 0, 704];
        if (block ~ ~ ~ #minecraft:walls[west=tall]) data modify storage retina:data Surfaces.West append value [0, 0, 320, 0, 1024, 704];
        if (block ~ ~ ~ #minecraft:walls[west=tall]) data modify storage retina:data Surfaces.East append value [256, 0, 320, 256, 1024, 704];
        if (block ~ ~ ~ #minecraft:walls[west=tall]) data modify storage retina:data Surfaces.North append value [0, 0, 320, 256, 1024, 320];
        if (block ~ ~ ~ #minecraft:walls[west=tall]) data modify storage retina:data Surfaces.South append value [0, 0, 704, 256, 1024, 704];

        if (block ~ ~ ~ #minecraft:walls[north=tall]) data modify storage retina:data Surfaces.Top append value [320, 1024, 0, 704, 1024, 256];
        if (block ~ ~ ~ #minecraft:walls[north=tall]) data modify storage retina:data Surfaces.Bottom append value [320, 0, 0, 704, 0, 256];
        if (block ~ ~ ~ #minecraft:walls[north=tall]) data modify storage retina:data Surfaces.West append value [320, 0, 0, 320, 1024, 256];
        if (block ~ ~ ~ #minecraft:walls[north=tall]) data modify storage retina:data Surfaces.East append value [704, 0, 0, 704, 1024, 256];
        if (block ~ ~ ~ #minecraft:walls[north=tall]) data modify storage retina:data Surfaces.North append value [320, 0, 0, 704, 1024, 0];
        if (block ~ ~ ~ #minecraft:walls[north=tall]) data modify storage retina:data Surfaces.South append value [320, 0, 256, 704, 1024, 256];

        if (block ~ ~ ~ #minecraft:walls[south=tall]) data modify storage retina:data Surfaces.Top append value [320, 1024, 768, 704, 1024, 1024];
        if (block ~ ~ ~ #minecraft:walls[south=tall]) data modify storage retina:data Surfaces.Bottom append value [320, 0, 768, 704, 0, 1024];
        if (block ~ ~ ~ #minecraft:walls[south=tall]) data modify storage retina:data Surfaces.West append value [320, 0, 768, 320, 1024, 1024];
        if (block ~ ~ ~ #minecraft:walls[south=tall]) data modify storage retina:data Surfaces.East append value [704, 0, 768, 704, 1024, 1024];
        if (block ~ ~ ~ #minecraft:walls[south=tall]) data modify storage retina:data Surfaces.North append value [320, 0, 768, 704, 1024, 768];
        if (block ~ ~ ~ #minecraft:walls[south=tall]) data modify storage retina:data Surfaces.South append value [320, 0, 1024, 704, 1024, 1024];
    }
    function weeping_vines() {
        data modify storage retina:data Surfaces set value {Top: [[256, 1024, 256, 768, 1024, 768]], Bottom: [[256, 640, 256, 768, 640, 768]], West: [[256, 640, 256, 256, 1024, 768]], East: [[768, 640, 256, 768, 1024, 768]], North: [[256, 640, 256, 768, 1024, 256]], South: [[256, 640, 768, 768, 1024, 768]]};
    }
    function cubic() {
        // Runs for 1x1x1 cubic blocks and for any other block that isn't supported by retina
        data modify storage retina:data Surfaces.Top set value [[    0,       1024, 0,       1024, 1024, 1024 ]];
        data modify storage retina:data Surfaces.Bottom set value [[ 0,       0,       0,       1024, 0,       1024 ]];
        data modify storage retina:data Surfaces.West set value [[   0,       0,       0,       0,       1024, 1024 ]];
        data modify storage retina:data Surfaces.East set value [[   1024, 0,       0,       1024, 1024, 1024 ]];
        data modify storage retina:data Surfaces.North set value [[  0,       0,       0,       1024, 1024, 0       ]];
        data modify storage retina:data Surfaces.South set value [[  0,       0,       1024, 1024, 1024, 1024 ]];
        $end = true;
    }
}